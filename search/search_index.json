{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction \u00b6 Welcome to the start of a new adventure! In this repository we will show you everything you need to do to setup a Minecraft Java Edition server! We will go through the steps in as much detail as possible and who knows? You might become the next Hypixel! Tutorials \u00b6 Setup \u00b6 Finding what server jar to use Setting up your minecraft server Contributing \u00b6 If you would like to Contribute just make a pull request with the changes and I'll review it. More info here Translation Assistance is much appreciated. Anything Minecraft Server Guide Plans \u00b6 We plan to put as much detail into how to setup, host and run a Minecraft Java Edition server as possible. From finding a host to getting an active playerbase, we endeavour to provide as much information as possibl, including, but not limited to; How to setup bungeecord; Configuring Anti Cheats; Chat filters and more. Discord \u00b6 You can join our Discord server here","title":"Introduction"},{"location":"#introduction","text":"Welcome to the start of a new adventure! In this repository we will show you everything you need to do to setup a Minecraft Java Edition server! We will go through the steps in as much detail as possible and who knows? You might become the next Hypixel!","title":"Introduction"},{"location":"#tutorials","text":"","title":"Tutorials"},{"location":"#setup","text":"Finding what server jar to use Setting up your minecraft server","title":"Setup"},{"location":"#contributing","text":"If you would like to Contribute just make a pull request with the changes and I'll review it. More info here Translation Assistance is much appreciated.","title":"Contributing"},{"location":"#anything-minecraft-server-guide-plans","text":"We plan to put as much detail into how to setup, host and run a Minecraft Java Edition server as possible. From finding a host to getting an active playerbase, we endeavour to provide as much information as possibl, including, but not limited to; How to setup bungeecord; Configuring Anti Cheats; Chat filters and more.","title":"Anything Minecraft Server Guide Plans"},{"location":"#discord","text":"You can join our Discord server here","title":"Discord"},{"location":"info/de_de/SERVER_JARS/","text":"Intro \u00b6 Hier sind mehr detaillierte Beschreibungen der Server-JARs Vanilla \u00b6 Vanilla ist der originale Server von Mojang und \u00fcnterst\u00fctzt keine Mods oder Plugins CraftBukkit \u00b6 CraftBukkit war der erste Server, der Plugins unterst\u00fctzt hat, ist aber der am Schlechtesten optimisierte Server SpigotMC \u00b6 SpigotMC ist ein Ableger von Bukkit, ist besser optimisiert, hat mehr Funktionen und erlaubt das verbinden von mehreren Servern \u00fcber BungeeCord PaperMC \u00b6 PaperMC ist ein Ableger von Spigot und holt noch mehr Leistung aus Spigot heraus Tuinity \u00b6 Tuinity ist ein Ableger von Paper und verbessert die Leistung nochmals Purpur \u00b6 Purpur ist auch ein Ableger von Paper, hat aber alle Funktionen von Tuinity. Purpur ist der empfohlene Server und hat fliegende Tintenfische. YatopiaMC \u00b6 YatopiaMC hat mehr Funktionen, die dir erlauben, den Server schneller zu machen, aber es hat viele Fehler / bugs, die das Spiel kaputt machen und ist nicht vollst\u00e4ndig getestet Fabric \u00b6 Fabric ist ein Modloader wie forge, aber braucht viel weniger Leistung.","title":"Intro"},{"location":"info/de_de/SERVER_JARS/#intro","text":"Hier sind mehr detaillierte Beschreibungen der Server-JARs","title":"Intro"},{"location":"info/de_de/SERVER_JARS/#vanilla","text":"Vanilla ist der originale Server von Mojang und \u00fcnterst\u00fctzt keine Mods oder Plugins","title":"Vanilla"},{"location":"info/de_de/SERVER_JARS/#craftbukkit","text":"CraftBukkit war der erste Server, der Plugins unterst\u00fctzt hat, ist aber der am Schlechtesten optimisierte Server","title":"CraftBukkit"},{"location":"info/de_de/SERVER_JARS/#spigotmc","text":"SpigotMC ist ein Ableger von Bukkit, ist besser optimisiert, hat mehr Funktionen und erlaubt das verbinden von mehreren Servern \u00fcber BungeeCord","title":"SpigotMC"},{"location":"info/de_de/SERVER_JARS/#papermc","text":"PaperMC ist ein Ableger von Spigot und holt noch mehr Leistung aus Spigot heraus","title":"PaperMC"},{"location":"info/de_de/SERVER_JARS/#tuinity","text":"Tuinity ist ein Ableger von Paper und verbessert die Leistung nochmals","title":"Tuinity"},{"location":"info/de_de/SERVER_JARS/#purpur","text":"Purpur ist auch ein Ableger von Paper, hat aber alle Funktionen von Tuinity. Purpur ist der empfohlene Server und hat fliegende Tintenfische.","title":"Purpur"},{"location":"info/de_de/SERVER_JARS/#yatopiamc","text":"YatopiaMC hat mehr Funktionen, die dir erlauben, den Server schneller zu machen, aber es hat viele Fehler / bugs, die das Spiel kaputt machen und ist nicht vollst\u00e4ndig getestet","title":"YatopiaMC"},{"location":"info/de_de/SERVER_JARS/#fabric","text":"Fabric ist ein Modloader wie forge, aber braucht viel weniger Leistung.","title":"Fabric"},{"location":"info/en_us/CONFIGURATION_OPTIONS/","text":"Configuring Your Server \u00b6 There are many ways to configure your server, often depending on what JAR you're using. There are a few things that you can do with any server jar, and that's what we'll show in this tutorial. Finding Your Configuration File \u00b6 To find your server configuration file, you'll need to look in the root directory of your server (Where your server JAR is). After you've run your server for the first time, you should have a file called server.properties . This config file has many settings that you can change to modify your server. Configuration Options \u00b6 You can find the default server.properties here or on the GitHub if you accidently mess it up, or forget a setting's original value. enable-jmx-monitoring \u00b6 Exposes an MBean, or Managed Bean ( Read More ) with the Object name net.minecraft.server:type=Server and two attributes averageTickTime and tickTimes exposing the tick times in milliseconds The default value is false and you should leave it there, unless a plugin or other service requests that you enable it. rcon.port \u00b6 The port that you'll need to open inorder to connect with RCON(see enable-rcon ) level-seed \u00b6 The seed that you want to use for world generation After you do this, you'll need to remove the world file in the root directory of your server. gamemode \u00b6 The gamemode for your server. Possible Values: survival, creative, adventure, spectator enable-command-blocks \u00b6 Should command blocks be allowed to run. Note: Command blocks can only be placed by players with OP, but if there's a redstone signal to one, anybody can run it. enable-query \u00b6 Enables GameSpy4 ( Read More ) protocol server listener. Used to get information about the server. The default value is false and you should leave it there, unless a plugin or other service requests that you enable it. generator-settings \u00b6 The settings used to customise world generation Follow the format found here level-name \u00b6 The name of your world folder in your root directory motd \u00b6 The motd, or Message Of The Day is the message that displays under the name of the server in a client's server list. By default, all text will be white. This colour can change through the use of colour codes in the format of \\u00A7 and then one of the sixteen colour codes and six formatting codes, or using the chart found below (the column titled 'MOTD code'). You can also you a MOTD generator . query.port \u00b6 The port for the query server (see enable-query ) pvp \u00b6 Whether or not players can harm each other. generate-structures \u00b6 Whether or not to generate structures like Villages, Strongholds, Outposts, and others difficulty \u00b6 The difficulty of the server Possible values: peaceful, easy, normal, hard network-compression-threshold \u00b6 By default it allows packets that are n-1 bytes big to go normally, but a packet of n bytes or more gets compressed down. So, a lower number means more compression but compressing small amounts of bytes might actually end up with a larger result than what went in. Note: The Ethernet spec requires that packets less than 64 bytes become padded to 64 bytes. Thus, setting a value lower than 64 may not be beneficial. It is also not recommended to exceed the MTU, typically 1500 bytes. Possible values: Integer, -1 means disable compression entirely, 0 means compress everything Default: 256 max-tick-time \u00b6 The max amount of milliseconds per tick before the server stops itself, assuming a crash has happened. Possible Values: Integer 0 - 2\u2076\u00b3-1 use-native-transport \u00b6 Linux server performance improvements: optimized packet sending/receiving on Linux max-players \u00b6 Maximum players on at one time online-mode \u00b6 When enabled, the server will assume that it has an internet connection and check all players joining for a valid Minecraft account. enable-status \u00b6 Whether or not the server appears as 'online' in the server list allow-flight \u00b6 When set to true, players who would normally be kicked for flying automatically will not be. broadcast-rcon-to-ops \u00b6 Send rcon(see enable-rcon ) console command outputs to all online operators. view-distance \u00b6 The amount of world data the server sends the client. Value is measured in chunks Possible Values: Integer (3-32) max-build-height \u00b6 The maximum build height that someone can build. Integer 0 - 256 ( must be multiple of 8 ) (as of 1.16.5) server-ip \u00b6 The player should set this if they want the server to bind to a particular IP. This is most common if you have multiple IPs for a particular machine. For almost all uses, this should be blank. You can read into specific use cases here , if you believe that it may be necessary. allow-nether \u00b6 Allow players to teleport to the Nether dimension server-port \u00b6 The port that the server should be hosted on enable-rcon \u00b6 Enables remote access( RCON ) to the server console. sync-chunk-writes \u00b6 Enables synchronous chunk writes. op-permission-level \u00b6 Sets the default permission level for ops when using /op . All levels inherit abilities and commands from levels before them. Possible Values: Ops can bypass vanilla spawn protection Ops can use all singleplayer cheats commands Ops can use most multiplayer-exclusive commands Ops can use all commands prevent-proxy-connections \u00b6 If the ISP/AS sent from the server is different from the one from Mojang Studios' authentication server, the player is kicked resource-pack \u00b6 URI to a resource pack Note: In some versions before 1.15.2, the \":\" and \"=\" characters need to be escaped with a backslash (\\) entity-broadcast-range-percentage \u00b6 Controls how close entities need to be before being sent to the client. Higher values means they'll be rendered from farther away, potentially causing more lag. Possible Values: Integer 0 - 500 rcon.password \u00b6 Password for rcon(see enable-rcon ) player-idle-timeout \u00b6 The amount of minutes before a player is kicked from being idle 0 means that it will not kick force-gamemode \u00b6 Force the player into the default gamemode(see gamemode ) upon joining rate-limit \u00b6 Sets the maximum amount of packets a user can send before getting kicked. 0 disables this feature. hardcore \u00b6 When enabled, server difficulty is ignored, and set to hard. Players are set into spectator mode when they die. white-list \u00b6 Should whitelist be enabled. Whitelist can be changed with the whitelist.json or in-game with /whitelist . broadcast-console-to-ops \u00b6 Should console commands get broadcast to online Op players spawn-npcs \u00b6 Whether or not villagers can spawn spawn-animals \u00b6 Can animals spawn? snooper-enabled \u00b6 Sets whether the server sends snoop data regularly to http://snoop.minecraft.net This includes data about the version of Minecraft that you're running, hardware specs, Java version, JVM arguments, and generation settings. The full list can be found here function-permission-level \u00b6 Sets the default permission level for functions. (See op-permission-level ) Possible Values: Integer 1 - 4 level-type \u00b6 The type of map to generate Possible Values: default, flat, largeBiomes, amplified, buffet(1.15+, settings set in generator-settings ) text-filtering-config \u00b6 Leave blank spawn-monsters \u00b6 Should monsters spawn? enforce-whitelist \u00b6 When this option is enabled, users who are not present on the whitelist (if it's enabled) get kicked from the server after the server reloads the whitelist file. resource-pack-sha1 \u00b6 Optional SHA-1 digest of the resource pack, in lowercase hexadecimal. It is recommended to specify this, because it is used to verify the integrity of the resource pack. spawn-protection \u00b6 Determines the side length of the square spawn protection area as 2x+1. Possible Values: Integer 0 - Disables spawn protection max-world-size \u00b6 This sets the maximum possible size in blocks, expressed as a radius, that the world border can obtain. Integer 1 - 29999984","title":"Configuring Your Server"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#configuring-your-server","text":"There are many ways to configure your server, often depending on what JAR you're using. There are a few things that you can do with any server jar, and that's what we'll show in this tutorial.","title":"Configuring Your Server"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#finding-your-configuration-file","text":"To find your server configuration file, you'll need to look in the root directory of your server (Where your server JAR is). After you've run your server for the first time, you should have a file called server.properties . This config file has many settings that you can change to modify your server.","title":"Finding Your Configuration File"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#configuration-options","text":"You can find the default server.properties here or on the GitHub if you accidently mess it up, or forget a setting's original value.","title":"Configuration Options"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#enable-jmx-monitoring","text":"Exposes an MBean, or Managed Bean ( Read More ) with the Object name net.minecraft.server:type=Server and two attributes averageTickTime and tickTimes exposing the tick times in milliseconds The default value is false and you should leave it there, unless a plugin or other service requests that you enable it.","title":"enable-jmx-monitoring"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#rconport","text":"The port that you'll need to open inorder to connect with RCON(see enable-rcon )","title":"rcon.port"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#level-seed","text":"The seed that you want to use for world generation After you do this, you'll need to remove the world file in the root directory of your server.","title":"level-seed"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#gamemode","text":"The gamemode for your server. Possible Values: survival, creative, adventure, spectator","title":"gamemode"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#enable-command-blocks","text":"Should command blocks be allowed to run. Note: Command blocks can only be placed by players with OP, but if there's a redstone signal to one, anybody can run it.","title":"enable-command-blocks"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#enable-query","text":"Enables GameSpy4 ( Read More ) protocol server listener. Used to get information about the server. The default value is false and you should leave it there, unless a plugin or other service requests that you enable it.","title":"enable-query"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#generator-settings","text":"The settings used to customise world generation Follow the format found here","title":"generator-settings"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#level-name","text":"The name of your world folder in your root directory","title":"level-name"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#motd","text":"The motd, or Message Of The Day is the message that displays under the name of the server in a client's server list. By default, all text will be white. This colour can change through the use of colour codes in the format of \\u00A7 and then one of the sixteen colour codes and six formatting codes, or using the chart found below (the column titled 'MOTD code'). You can also you a MOTD generator .","title":"motd"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#queryport","text":"The port for the query server (see enable-query )","title":"query.port"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#pvp","text":"Whether or not players can harm each other.","title":"pvp"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#generate-structures","text":"Whether or not to generate structures like Villages, Strongholds, Outposts, and others","title":"generate-structures"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#difficulty","text":"The difficulty of the server Possible values: peaceful, easy, normal, hard","title":"difficulty"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#network-compression-threshold","text":"By default it allows packets that are n-1 bytes big to go normally, but a packet of n bytes or more gets compressed down. So, a lower number means more compression but compressing small amounts of bytes might actually end up with a larger result than what went in. Note: The Ethernet spec requires that packets less than 64 bytes become padded to 64 bytes. Thus, setting a value lower than 64 may not be beneficial. It is also not recommended to exceed the MTU, typically 1500 bytes. Possible values: Integer, -1 means disable compression entirely, 0 means compress everything Default: 256","title":"network-compression-threshold"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#max-tick-time","text":"The max amount of milliseconds per tick before the server stops itself, assuming a crash has happened. Possible Values: Integer 0 - 2\u2076\u00b3-1","title":"max-tick-time"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#use-native-transport","text":"Linux server performance improvements: optimized packet sending/receiving on Linux","title":"use-native-transport"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#max-players","text":"Maximum players on at one time","title":"max-players"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#online-mode","text":"When enabled, the server will assume that it has an internet connection and check all players joining for a valid Minecraft account.","title":"online-mode"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#enable-status","text":"Whether or not the server appears as 'online' in the server list","title":"enable-status"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#allow-flight","text":"When set to true, players who would normally be kicked for flying automatically will not be.","title":"allow-flight"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#broadcast-rcon-to-ops","text":"Send rcon(see enable-rcon ) console command outputs to all online operators.","title":"broadcast-rcon-to-ops"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#view-distance","text":"The amount of world data the server sends the client. Value is measured in chunks Possible Values: Integer (3-32)","title":"view-distance"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#max-build-height","text":"The maximum build height that someone can build. Integer 0 - 256 ( must be multiple of 8 ) (as of 1.16.5)","title":"max-build-height"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#server-ip","text":"The player should set this if they want the server to bind to a particular IP. This is most common if you have multiple IPs for a particular machine. For almost all uses, this should be blank. You can read into specific use cases here , if you believe that it may be necessary.","title":"server-ip"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#allow-nether","text":"Allow players to teleport to the Nether dimension","title":"allow-nether"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#server-port","text":"The port that the server should be hosted on","title":"server-port"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#enable-rcon","text":"Enables remote access( RCON ) to the server console.","title":"enable-rcon"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#sync-chunk-writes","text":"Enables synchronous chunk writes.","title":"sync-chunk-writes"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#op-permission-level","text":"Sets the default permission level for ops when using /op . All levels inherit abilities and commands from levels before them. Possible Values: Ops can bypass vanilla spawn protection Ops can use all singleplayer cheats commands Ops can use most multiplayer-exclusive commands Ops can use all commands","title":"op-permission-level"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#prevent-proxy-connections","text":"If the ISP/AS sent from the server is different from the one from Mojang Studios' authentication server, the player is kicked","title":"prevent-proxy-connections"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#resource-pack","text":"URI to a resource pack Note: In some versions before 1.15.2, the \":\" and \"=\" characters need to be escaped with a backslash (\\)","title":"resource-pack"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#entity-broadcast-range-percentage","text":"Controls how close entities need to be before being sent to the client. Higher values means they'll be rendered from farther away, potentially causing more lag. Possible Values: Integer 0 - 500","title":"entity-broadcast-range-percentage"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#rconpassword","text":"Password for rcon(see enable-rcon )","title":"rcon.password"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#player-idle-timeout","text":"The amount of minutes before a player is kicked from being idle 0 means that it will not kick","title":"player-idle-timeout"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#force-gamemode","text":"Force the player into the default gamemode(see gamemode ) upon joining","title":"force-gamemode"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#rate-limit","text":"Sets the maximum amount of packets a user can send before getting kicked. 0 disables this feature.","title":"rate-limit"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#hardcore","text":"When enabled, server difficulty is ignored, and set to hard. Players are set into spectator mode when they die.","title":"hardcore"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#white-list","text":"Should whitelist be enabled. Whitelist can be changed with the whitelist.json or in-game with /whitelist .","title":"white-list"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#broadcast-console-to-ops","text":"Should console commands get broadcast to online Op players","title":"broadcast-console-to-ops"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#spawn-npcs","text":"Whether or not villagers can spawn","title":"spawn-npcs"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#spawn-animals","text":"Can animals spawn?","title":"spawn-animals"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#snooper-enabled","text":"Sets whether the server sends snoop data regularly to http://snoop.minecraft.net This includes data about the version of Minecraft that you're running, hardware specs, Java version, JVM arguments, and generation settings. The full list can be found here","title":"snooper-enabled"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#function-permission-level","text":"Sets the default permission level for functions. (See op-permission-level ) Possible Values: Integer 1 - 4","title":"function-permission-level"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#level-type","text":"The type of map to generate Possible Values: default, flat, largeBiomes, amplified, buffet(1.15+, settings set in generator-settings )","title":"level-type"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#text-filtering-config","text":"Leave blank","title":"text-filtering-config"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#spawn-monsters","text":"Should monsters spawn?","title":"spawn-monsters"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#enforce-whitelist","text":"When this option is enabled, users who are not present on the whitelist (if it's enabled) get kicked from the server after the server reloads the whitelist file.","title":"enforce-whitelist"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#resource-pack-sha1","text":"Optional SHA-1 digest of the resource pack, in lowercase hexadecimal. It is recommended to specify this, because it is used to verify the integrity of the resource pack.","title":"resource-pack-sha1"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#spawn-protection","text":"Determines the side length of the square spawn protection area as 2x+1. Possible Values: Integer 0 - Disables spawn protection","title":"spawn-protection"},{"location":"info/en_us/CONFIGURATION_OPTIONS/#max-world-size","text":"This sets the maximum possible size in blocks, expressed as a radius, that the world border can obtain. Integer 1 - 29999984","title":"max-world-size"},{"location":"info/en_us/HOSTING_PROVIDERS/","text":"Hosting Providers \u00b6 Here are some recommended hosting providers: - AtlasNode - Birdflop - Bloom.host - ByteAnia - DedicatedMC - MixmlHosting - PebbleHost - WinterNode - Server.pro - Apex Hosting Here is a list of as many hosting providers as we can find, good and bad: AnvilNode Aternos AtlasNode CryHosting BeastNode Birdflop BisectHosting Bloom.Host CubedHost DedicatedMC ElixirNode EnviroMC ForestRacks Game Host Network GGServers Hostinger HumbleServers JeekieHost LogicServers MCHostingPro MCProHosting MelonCube Minehut MixmlHosting Nitrado Pebblehost MajestyNodes RamShard RetroNode ReviveNode ScalaCube ServerMiner Shockbyte Skynode SparkedHost TitanNodes WinterNode","title":"Hosting Providers"},{"location":"info/en_us/HOSTING_PROVIDERS/#hosting-providers","text":"Here are some recommended hosting providers: - AtlasNode - Birdflop - Bloom.host - ByteAnia - DedicatedMC - MixmlHosting - PebbleHost - WinterNode - Server.pro - Apex Hosting Here is a list of as many hosting providers as we can find, good and bad: AnvilNode Aternos AtlasNode CryHosting BeastNode Birdflop BisectHosting Bloom.Host CubedHost DedicatedMC ElixirNode EnviroMC ForestRacks Game Host Network GGServers Hostinger HumbleServers JeekieHost LogicServers MCHostingPro MCProHosting MelonCube Minehut MixmlHosting Nitrado Pebblehost MajestyNodes RamShard RetroNode ReviveNode ScalaCube ServerMiner Shockbyte Skynode SparkedHost TitanNodes WinterNode","title":"Hosting Providers"},{"location":"info/en_us/SERVER_JARS/","text":"Picking a Server JAR \u00b6 What is a Server JAR? \u00b6 Here we will go into as much detail as possible about each server jar you can use for your server What is a fork? \u00b6 Later, we will use the term \"fork\" often. A fork is an extension on an original piece of open-source software, allowing for additional functionality and changes. The term \"upstream\" is used to describe the original software which a fork is based upon. Software can also be a fork of multiple forks. For example, Tuinity is a fork of PaperSpigot which is a fork of Spigot which is a fork of CraftBukkit which is a fork of the original Minecraft Vanilla server software. Server Jar Options \u00b6 Vanilla \u00b6 Vanilla is the original server jar that is distributed by Mojang. Plugins and mods are not supported on this. Vanilla servers behaves like normal singleplayer Minecraft but with additional commands. CraftBukkit \u00b6 CraftBukkit was the first server jar to support plugins. However, now it is the least optimized server jar with plugin support. It is currently being supported by SpigotMC. SpigotMC \u00b6 SpigotMC, or Spigot, is a fork of Bukkit with; better performance; more features; and allows you to connect servers with Bungeecord. PaperMC \u00b6 PaperMC, or PaperSpigot, is a fork of SpigotMC. It aims to provide better performance, being updated more often than Spigot. With this, PaperMC is able to patch bugs and exploits faster than SpigotMC. Tuinity \u00b6 Tuinity is a fork of PaperMC that is \"aimed at imporiving server performance at high playercounts\" Purpur \u00b6 \"Purpur is a fork of Paper and Tuinity with the goal of providing new and interesting configuration options.\" Fabric \u00b6 Fabric is a modloader, similar to Forge but much more lightweight. Growing in popularity recently, it also has some of the best QOL client-side mods, but also new and improved server optimizing mods. Proxies \u00b6 Proxies are servers meant to connect multiple servers together, as a network. These servers can run on the same machine or even on different machines at different locations! Running your server as a network can greatly improve performance, as Minecraft can spread the load over multiple cores. However, it also adds complexity, as setting up and managing multiple servers isn\u2019t as simple as managing one server. BungeeCord \u00b6 BungeeCord is the original Minecraft proxy which \"acts as a proxy between the player's client and the connected Minecraft servers\". This allows players to seamlessly be transferred between different servers. Waterfall \u00b6 Waterfall is PaperMC's fork of BungeeCord. It aims to provide stability, scalibility and more features. Similar to PaperMC, it has more frequent updates than BungeeCord. Velocity \u00b6 \"Velocity is a next-generation Minecraft proxy focused on scalability and flexibility. It allows server owners to link together multiple Minecraft servers so they may appear as one.\" Pretty much a much more optimized alternative to BungeeCord and Waterfall, although lacks out-of-the-box support for most BungeeCord plugins.","title":"Picking a Server JAR"},{"location":"info/en_us/SERVER_JARS/#picking-a-server-jar","text":"","title":"Picking a Server JAR"},{"location":"info/en_us/SERVER_JARS/#what-is-a-server-jar","text":"Here we will go into as much detail as possible about each server jar you can use for your server","title":"What is a Server JAR?"},{"location":"info/en_us/SERVER_JARS/#what-is-a-fork","text":"Later, we will use the term \"fork\" often. A fork is an extension on an original piece of open-source software, allowing for additional functionality and changes. The term \"upstream\" is used to describe the original software which a fork is based upon. Software can also be a fork of multiple forks. For example, Tuinity is a fork of PaperSpigot which is a fork of Spigot which is a fork of CraftBukkit which is a fork of the original Minecraft Vanilla server software.","title":"What is a fork?"},{"location":"info/en_us/SERVER_JARS/#server-jar-options","text":"","title":"Server Jar Options"},{"location":"info/en_us/SERVER_JARS/#vanilla","text":"Vanilla is the original server jar that is distributed by Mojang. Plugins and mods are not supported on this. Vanilla servers behaves like normal singleplayer Minecraft but with additional commands.","title":"Vanilla"},{"location":"info/en_us/SERVER_JARS/#craftbukkit","text":"CraftBukkit was the first server jar to support plugins. However, now it is the least optimized server jar with plugin support. It is currently being supported by SpigotMC.","title":"CraftBukkit"},{"location":"info/en_us/SERVER_JARS/#spigotmc","text":"SpigotMC, or Spigot, is a fork of Bukkit with; better performance; more features; and allows you to connect servers with Bungeecord.","title":"SpigotMC"},{"location":"info/en_us/SERVER_JARS/#papermc","text":"PaperMC, or PaperSpigot, is a fork of SpigotMC. It aims to provide better performance, being updated more often than Spigot. With this, PaperMC is able to patch bugs and exploits faster than SpigotMC.","title":"PaperMC"},{"location":"info/en_us/SERVER_JARS/#tuinity","text":"Tuinity is a fork of PaperMC that is \"aimed at imporiving server performance at high playercounts\"","title":"Tuinity"},{"location":"info/en_us/SERVER_JARS/#purpur","text":"\"Purpur is a fork of Paper and Tuinity with the goal of providing new and interesting configuration options.\"","title":"Purpur"},{"location":"info/en_us/SERVER_JARS/#fabric","text":"Fabric is a modloader, similar to Forge but much more lightweight. Growing in popularity recently, it also has some of the best QOL client-side mods, but also new and improved server optimizing mods.","title":"Fabric"},{"location":"info/en_us/SERVER_JARS/#proxies","text":"Proxies are servers meant to connect multiple servers together, as a network. These servers can run on the same machine or even on different machines at different locations! Running your server as a network can greatly improve performance, as Minecraft can spread the load over multiple cores. However, it also adds complexity, as setting up and managing multiple servers isn\u2019t as simple as managing one server.","title":"Proxies"},{"location":"info/en_us/SERVER_JARS/#bungeecord","text":"BungeeCord is the original Minecraft proxy which \"acts as a proxy between the player's client and the connected Minecraft servers\". This allows players to seamlessly be transferred between different servers.","title":"BungeeCord"},{"location":"info/en_us/SERVER_JARS/#waterfall","text":"Waterfall is PaperMC's fork of BungeeCord. It aims to provide stability, scalibility and more features. Similar to PaperMC, it has more frequent updates than BungeeCord.","title":"Waterfall"},{"location":"info/en_us/SERVER_JARS/#velocity","text":"\"Velocity is a next-generation Minecraft proxy focused on scalability and flexibility. It allows server owners to link together multiple Minecraft servers so they may appear as one.\" Pretty much a much more optimized alternative to BungeeCord and Waterfall, although lacks out-of-the-box support for most BungeeCord plugins.","title":"Velocity"},{"location":"info/en_us/PLUGINS/ANTICHEATS/","text":"Anti-Cheat Pluigns \u00b6 Here is a list of some anti-cheats, good or bad. Spigot has it's own wiki page on anti-cheats . This page is based on that list. Generally speaking, paid anti-cheat plugins are better than free ones. Free Plugins \u00b6 This list of free anti-cheats is sorted alphabetically. AntiCheatReloaded BadPacket Basic Anti-Cheat Frequency Hades Hawk Anticheat Horizon Kauri Anticheat Medusa AntiCheat Meme AntiCheat NESS Anti-Cheat Reloaded Negativity NoCheatPlus Optimus Pandora Anticheat Phoenix Anti-Cheat Snow AntiCheat SoaromaSAC Storm Anticheat ThotPatrol Visage Anticheat Warden Cheat Detection Wither Anti Cheat zHack Lite Paid Plugins \u00b6 This list of paid anti-cheats is sorted alphabetically. AAC (Advanced Anti Cheat) (Best used with AACAdditionPro ) - \u00a320.00 Alice - \u20ac14.99 AngelX AntiCheat - \u20ac30.00 AntiAura - \u00a37.00 Artemis - \\(100/\\) 200 Buzz - $30/month, $250/year (Unreleased) DakataAntiCheat - \u20ac5.99 Fully Automatic Anti-Cheat - $5.00 Fume Anti-Cheat - $??? (Unreleased) GodsEye AntiCheat - \u00a315.50 Intave AntiCheat - ??? JI Anticheat - $20.00 KarhuAC - \u20ac20.00 Karma Anticheat - $17.50 Matrix Anti Cheat - $20.00 OpenEye AntiCheat - $9.99 OverFlow AntiCheat - ??? Reflex Machine Learning Cheat Detection - \u20ac10.00 Sparky Anti-Cheat - $60 Spartan Anti Cheat - \u20ac22.50+ Taka AntiCheat - \u20ac8.00 Vulcan - $20.00 Wraith Anticheat - \u20ac5.99","title":"Anti-Cheat Pluigns"},{"location":"info/en_us/PLUGINS/ANTICHEATS/#anti-cheat-pluigns","text":"Here is a list of some anti-cheats, good or bad. Spigot has it's own wiki page on anti-cheats . This page is based on that list. Generally speaking, paid anti-cheat plugins are better than free ones.","title":"Anti-Cheat Pluigns"},{"location":"info/en_us/PLUGINS/ANTICHEATS/#free-plugins","text":"This list of free anti-cheats is sorted alphabetically. AntiCheatReloaded BadPacket Basic Anti-Cheat Frequency Hades Hawk Anticheat Horizon Kauri Anticheat Medusa AntiCheat Meme AntiCheat NESS Anti-Cheat Reloaded Negativity NoCheatPlus Optimus Pandora Anticheat Phoenix Anti-Cheat Snow AntiCheat SoaromaSAC Storm Anticheat ThotPatrol Visage Anticheat Warden Cheat Detection Wither Anti Cheat zHack Lite","title":"Free Plugins"},{"location":"info/en_us/PLUGINS/ANTICHEATS/#paid-plugins","text":"This list of paid anti-cheats is sorted alphabetically. AAC (Advanced Anti Cheat) (Best used with AACAdditionPro ) - \u00a320.00 Alice - \u20ac14.99 AngelX AntiCheat - \u20ac30.00 AntiAura - \u00a37.00 Artemis - \\(100/\\) 200 Buzz - $30/month, $250/year (Unreleased) DakataAntiCheat - \u20ac5.99 Fully Automatic Anti-Cheat - $5.00 Fume Anti-Cheat - $??? (Unreleased) GodsEye AntiCheat - \u00a315.50 Intave AntiCheat - ??? JI Anticheat - $20.00 KarhuAC - \u20ac20.00 Karma Anticheat - $17.50 Matrix Anti Cheat - $20.00 OpenEye AntiCheat - $9.99 OverFlow AntiCheat - ??? Reflex Machine Learning Cheat Detection - \u20ac10.00 Sparky Anti-Cheat - $60 Spartan Anti Cheat - \u20ac22.50+ Taka AntiCheat - \u20ac8.00 Vulcan - $20.00 Wraith Anticheat - \u20ac5.99","title":"Paid Plugins"},{"location":"info/en_us/PLUGINS/PERMISSION/","text":"Permission plugins \u00b6 Permission management plugins are important on every server; from a small server with friends to the biggest networks. With permissions you decide what features your players can and can't access. In this document, you'll find a list of the most popular permission plugins, sorted from most common to least common. LuckPerms \u00b6 LuckPerms is a widely used, community-favoured permissions plugin. It has more than 1 million downloads and is arguably the most intuitive, thanks to numerous features including: A web editor , with a great overview and support for bulk editing. Verbose system, listing permission checks of other plugins in real-time. Easy to use, tab-completed editing functionality in-game. Migration functionality from other permission plugins. If you have a small server with straight forward permissions, you might want to look to an other plugin, as luckperms is really extensive. GroupManager \u00b6 GroupManager doesn't have as many features as LuckPerms, but is great for novices who need all the necessary features for their Minecraft server. It's been downloaded 400,000 times and supports inheritance of permissions, but it has only one track. LightPerms \u00b6 LightPerms is the \"most basic permission plugin ever\". Its features are straightforward, light and easy to use, and is therefore good for less demanding users. If you host a small server, such as only for your friends, you might want to look into this plugin. It can do the following: Make groups and add players to a group Add permissions to groups or individual players Reload and list groups PermissionsEx \u00b6 The developers of PermissionsEx are working towards a new version, supporting the latest version of Minecraft. At the time of writing the latest stable version is from early 2016. The new version is still under heavy development, so it's not advised to use this plugin at this moment. Functions in the pipeline are: Tab complete Context system (permissions per server, world, etc.) Rank ladders/tracks","title":"Permission plugins"},{"location":"info/en_us/PLUGINS/PERMISSION/#permission-plugins","text":"Permission management plugins are important on every server; from a small server with friends to the biggest networks. With permissions you decide what features your players can and can't access. In this document, you'll find a list of the most popular permission plugins, sorted from most common to least common.","title":"Permission plugins"},{"location":"info/en_us/PLUGINS/PERMISSION/#luckperms","text":"LuckPerms is a widely used, community-favoured permissions plugin. It has more than 1 million downloads and is arguably the most intuitive, thanks to numerous features including: A web editor , with a great overview and support for bulk editing. Verbose system, listing permission checks of other plugins in real-time. Easy to use, tab-completed editing functionality in-game. Migration functionality from other permission plugins. If you have a small server with straight forward permissions, you might want to look to an other plugin, as luckperms is really extensive.","title":"LuckPerms"},{"location":"info/en_us/PLUGINS/PERMISSION/#groupmanager","text":"GroupManager doesn't have as many features as LuckPerms, but is great for novices who need all the necessary features for their Minecraft server. It's been downloaded 400,000 times and supports inheritance of permissions, but it has only one track.","title":"GroupManager"},{"location":"info/en_us/PLUGINS/PERMISSION/#lightperms","text":"LightPerms is the \"most basic permission plugin ever\". Its features are straightforward, light and easy to use, and is therefore good for less demanding users. If you host a small server, such as only for your friends, you might want to look into this plugin. It can do the following: Make groups and add players to a group Add permissions to groups or individual players Reload and list groups","title":"LightPerms"},{"location":"info/en_us/PLUGINS/PERMISSION/#permissionsex","text":"The developers of PermissionsEx are working towards a new version, supporting the latest version of Minecraft. At the time of writing the latest stable version is from early 2016. The new version is still under heavy development, so it's not advised to use this plugin at this moment. Functions in the pipeline are: Tab complete Context system (permissions per server, world, etc.) Rank ladders/tracks","title":"PermissionsEx"},{"location":"info/en_us/PLUGINS/USEFUL_PLUGINS/","text":"Useful Plugins \u00b6 Here are some popular plugins that you may find useful on your server. Table of Contents \u00b6 This list will be divided into the following categories. Click on one to go to that category. Utility Fun Creativity Anti-Grief Server Management Utility Plugins \u00b6 Utility plugins focus on adding functionality for players to use. EssentialsX \u00b6 EssentialsX is the essential plugin for Spigot servers, providing core features for servers of any size and scale. Essentials adds many different customizable features, such as /homes, /warps, kits, direct messaging, teleporting, nicknames and much more. Vault \u00b6 Vault is a Permissions, Chat, & Economy API to give plugins easy hooks into these systems without needing to hook or depend on each individual plugin themselves. Vault provides an API for other plugins to use. PartyChat \u00b6 PartyChat is a fully configurable, easy to use plugin, that allows players to chat with their friends in private parties. Only players within the party and admins are able to see the messages. PvPToggle \u00b6 PvPToggle is an easy to use plugin made to allow players more control over their pvp status. Players can decide whether or not they want to pvp with other players and toggle it on and off with a simple /pvp. PvPToggle allows for players to toggle between allowing PvP and being safe from it. The plugin features completely customizable messages, and is frequently updated to the latest releases of Minecraft. DiscordSRV \u00b6 The most powerful, configurable, open-source Discord to Minecraft bridging plugin available. DiscordSRV provides the ability to link in-game chat to your Discord server both ways! It also provides a Discord to Minecraft console, whitelisting and much more. Fun Plugins \u00b6 The plugins in this category have a focus on fun aspects that are added to the server's gameplay. HexNicks \u00b6 HexNicks gives players the ability to change their nickname to anything they like using both hex color codes and normal color codes. It also adds the ability to use hex color codes in chat. HexNicks adds a few commands that give the player the ability to change their name into something different that can use hexadecimal color codes and standard Minecraft color codes. PetBlocks \u00b6 PetBlocks is a Spigot and Sponge plugin to use blocks and custom heads as pets in Minecraft. PetBlocks adds commands that can give players pets that can look like custom heads or blocks. Dynmap \u00b6 A Google Maps-like map for your Minecraft server that can be viewed in a browser. Easy to set up when making use of Dynmap's integrated webserver which works out-of-the-box, while also available to be integrated into existing websites running on Apache and the like. Dynmap can render your worlds using different renderers, some suitable for performance, some for high detail. Dynmap gives players the ability to move around their world through an internet browser. Creativity Plugins \u00b6 The plugins in this category have a focus on additions that allow players to express their creativity the most. WorldEdit \u00b6 A Minecraft Map Editor... that runs in-game! With selections, schematics, copy and paste, brushes, and scripting. Use it in creative, or use it temporarily in survival. World Edit is a great plugin for building and designing. It introduces multiple new tools for players to create with. Fast Async World Edit (FAWE) \u00b6 FAWE is designed for efficient world editing. FAWE is a plugin that focuses on more efficient WorldEdit actions. FAWE has more than 200 commands, unlimited //undo s, and much more. Head Database \u00b6 Head Database is a fast and user-friendly plugin that allows you to obtain thousands of custom Minecraft skulls that feature unique designs. This easy-to-use heads plugin gives you access to creative designing opportunities that overall enhance the quality of your builds, and gives creative freedom to yourself and your players. If you want to find more ways for your builds to shine, effortlessly, this plugin is for you!\u200b Head Database allows players to get custom heads that are hosted on in-game without needing permission for /give . The plugin allows for integration with Vault to use as currency. It also has customizable categories, search function for heads, a heavily customizable GUI, and more. Anti-Grief Plugins \u00b6 The plugins in this category have a focus on preventing and controlling griefing. GriefPrevention \u00b6 Grief Prevention will solve your grief problems without a roster of trained administrators, without 10 different anti-grief plugins, and without disabling any standard game features. Because Grief Prevention teaches players for you, you won't have to publish a training manual or tutorial for players, or add explanatory signs to your world. GriefPrevention allows players to create and modify their own player claims, as well as server admins creating admin claims, which have more customizability for admins and can prevent players from building. WorldGuard \u00b6 WorldGuard is a powerful plugin with a large bag of tricks for server owners, server map makers, regular survival servers, and everyone in between! WorldGuard offers many tools to prevent players from interacting with things, natural issues like fire spread, blacklisting certain items, and more. CoreProtect \u00b6 CoreProtect is a fast, efficient, data logging and anti-griefing tool. Rollback and restore any amount of damage. Designed with large servers in mind, CoreProtect will record and manage data without impacting your server performance. CoreProtect logs many different interactions, such as blocks broken, blocks placed, fluid placement/removal, plant growth, fire, tnt explosions, portal generation, and much more. With CoreProtect, you can also rollback any of the events that are logged. Server Management Plugins \u00b6 The plugins in this category have a focus on giving staff the tools to moderate chat and gameplay as well as managing the server. ClearLagg \u00b6 Designed with reducing lag as the primary goal, clearlag has grown over the years to target multiple sources of lag/exploits that plague minecraft servers and drastically decrease overall performance. Whether it be by culling entities, limiting mob-spawners, limiting mob-eggs, limiting mob-breeding, setting per-item entity live-time, the list goes on. ClearLagg gives staff useful tools for clearing and preventing lag on a Minecraft server. NOTE : In most cases this will actually increase lag due to the plugin's slow, heavy tasks on main thread. Tebex (Previously BuyCraft) \u00b6 Featuring full UUID support and Mojang username verification as well as supporting offline mode servers, Tebex has the ability and the feature set to power even the largest of server communities. Tebex creates a webstore that you can link with your Minecraft server to accept donations or purchase ranks, items, or kits. Staff+ \u00b6 Staff+ is a plugin that adds many useful features for staff members and players. It has a lot of features, like vanish, testing for a player's CPS, viewing a player's inventory, reports(from players), warnings(from staff), tickets, and more. Voting Plugin \u00b6 Highly customizable vote listener with many features! Voting Plugin is an advance vote listener, paired with Votifier , NuVotifier , or VotifierPlus , you can configure it so that players can recieve rewards for voting. LuckPerms \u00b6 LuckPerms is a permissions plugin for Minecraft servers. It allows server admins to control what features players can use by creating groups and assigning permissions. LuckPerms is a permissions plugin that can be configure to have ranks that each have their own specific permissions. Most plugins have permissions setup that LuckPerms can control. ViaVersion \u00b6 Our aim is to allow newer client versions to connect to older server versions. Just drag and drop it into the plugin folder and you're done, see below if you use a proxy like BungeeCord. We currently support Spigot / BungeeCord / Sponge / Velocity. ViaVersion allows players to connect to older servers with newer clients.","title":"Useful Plugins"},{"location":"info/en_us/PLUGINS/USEFUL_PLUGINS/#useful-plugins","text":"Here are some popular plugins that you may find useful on your server.","title":"Useful Plugins"},{"location":"info/en_us/PLUGINS/USEFUL_PLUGINS/#table-of-contents","text":"This list will be divided into the following categories. Click on one to go to that category. Utility Fun Creativity Anti-Grief Server Management","title":"Table of Contents"},{"location":"info/en_us/PLUGINS/USEFUL_PLUGINS/#utility-plugins","text":"Utility plugins focus on adding functionality for players to use.","title":"Utility Plugins"},{"location":"info/en_us/PLUGINS/USEFUL_PLUGINS/#essentialsx","text":"EssentialsX is the essential plugin for Spigot servers, providing core features for servers of any size and scale. Essentials adds many different customizable features, such as /homes, /warps, kits, direct messaging, teleporting, nicknames and much more.","title":"EssentialsX"},{"location":"info/en_us/PLUGINS/USEFUL_PLUGINS/#vault","text":"Vault is a Permissions, Chat, & Economy API to give plugins easy hooks into these systems without needing to hook or depend on each individual plugin themselves. Vault provides an API for other plugins to use.","title":"Vault"},{"location":"info/en_us/PLUGINS/USEFUL_PLUGINS/#partychat","text":"PartyChat is a fully configurable, easy to use plugin, that allows players to chat with their friends in private parties. Only players within the party and admins are able to see the messages.","title":"PartyChat"},{"location":"info/en_us/PLUGINS/USEFUL_PLUGINS/#pvptoggle","text":"PvPToggle is an easy to use plugin made to allow players more control over their pvp status. Players can decide whether or not they want to pvp with other players and toggle it on and off with a simple /pvp. PvPToggle allows for players to toggle between allowing PvP and being safe from it. The plugin features completely customizable messages, and is frequently updated to the latest releases of Minecraft.","title":"PvPToggle"},{"location":"info/en_us/PLUGINS/USEFUL_PLUGINS/#discordsrv","text":"The most powerful, configurable, open-source Discord to Minecraft bridging plugin available. DiscordSRV provides the ability to link in-game chat to your Discord server both ways! It also provides a Discord to Minecraft console, whitelisting and much more.","title":"DiscordSRV"},{"location":"info/en_us/PLUGINS/USEFUL_PLUGINS/#fun-plugins","text":"The plugins in this category have a focus on fun aspects that are added to the server's gameplay.","title":"Fun Plugins"},{"location":"info/en_us/PLUGINS/USEFUL_PLUGINS/#hexnicks","text":"HexNicks gives players the ability to change their nickname to anything they like using both hex color codes and normal color codes. It also adds the ability to use hex color codes in chat. HexNicks adds a few commands that give the player the ability to change their name into something different that can use hexadecimal color codes and standard Minecraft color codes.","title":"HexNicks"},{"location":"info/en_us/PLUGINS/USEFUL_PLUGINS/#petblocks","text":"PetBlocks is a Spigot and Sponge plugin to use blocks and custom heads as pets in Minecraft. PetBlocks adds commands that can give players pets that can look like custom heads or blocks.","title":"PetBlocks"},{"location":"info/en_us/PLUGINS/USEFUL_PLUGINS/#dynmap","text":"A Google Maps-like map for your Minecraft server that can be viewed in a browser. Easy to set up when making use of Dynmap's integrated webserver which works out-of-the-box, while also available to be integrated into existing websites running on Apache and the like. Dynmap can render your worlds using different renderers, some suitable for performance, some for high detail. Dynmap gives players the ability to move around their world through an internet browser.","title":"Dynmap"},{"location":"info/en_us/PLUGINS/USEFUL_PLUGINS/#creativity-plugins","text":"The plugins in this category have a focus on additions that allow players to express their creativity the most.","title":"Creativity Plugins"},{"location":"info/en_us/PLUGINS/USEFUL_PLUGINS/#worldedit","text":"A Minecraft Map Editor... that runs in-game! With selections, schematics, copy and paste, brushes, and scripting. Use it in creative, or use it temporarily in survival. World Edit is a great plugin for building and designing. It introduces multiple new tools for players to create with.","title":"WorldEdit"},{"location":"info/en_us/PLUGINS/USEFUL_PLUGINS/#fast-async-world-edit-fawe","text":"FAWE is designed for efficient world editing. FAWE is a plugin that focuses on more efficient WorldEdit actions. FAWE has more than 200 commands, unlimited //undo s, and much more.","title":"Fast Async World Edit (FAWE)"},{"location":"info/en_us/PLUGINS/USEFUL_PLUGINS/#head-database","text":"Head Database is a fast and user-friendly plugin that allows you to obtain thousands of custom Minecraft skulls that feature unique designs. This easy-to-use heads plugin gives you access to creative designing opportunities that overall enhance the quality of your builds, and gives creative freedom to yourself and your players. If you want to find more ways for your builds to shine, effortlessly, this plugin is for you!\u200b Head Database allows players to get custom heads that are hosted on in-game without needing permission for /give . The plugin allows for integration with Vault to use as currency. It also has customizable categories, search function for heads, a heavily customizable GUI, and more.","title":"Head Database"},{"location":"info/en_us/PLUGINS/USEFUL_PLUGINS/#anti-grief-plugins","text":"The plugins in this category have a focus on preventing and controlling griefing.","title":"Anti-Grief Plugins"},{"location":"info/en_us/PLUGINS/USEFUL_PLUGINS/#griefprevention","text":"Grief Prevention will solve your grief problems without a roster of trained administrators, without 10 different anti-grief plugins, and without disabling any standard game features. Because Grief Prevention teaches players for you, you won't have to publish a training manual or tutorial for players, or add explanatory signs to your world. GriefPrevention allows players to create and modify their own player claims, as well as server admins creating admin claims, which have more customizability for admins and can prevent players from building.","title":"GriefPrevention"},{"location":"info/en_us/PLUGINS/USEFUL_PLUGINS/#worldguard","text":"WorldGuard is a powerful plugin with a large bag of tricks for server owners, server map makers, regular survival servers, and everyone in between! WorldGuard offers many tools to prevent players from interacting with things, natural issues like fire spread, blacklisting certain items, and more.","title":"WorldGuard"},{"location":"info/en_us/PLUGINS/USEFUL_PLUGINS/#coreprotect","text":"CoreProtect is a fast, efficient, data logging and anti-griefing tool. Rollback and restore any amount of damage. Designed with large servers in mind, CoreProtect will record and manage data without impacting your server performance. CoreProtect logs many different interactions, such as blocks broken, blocks placed, fluid placement/removal, plant growth, fire, tnt explosions, portal generation, and much more. With CoreProtect, you can also rollback any of the events that are logged.","title":"CoreProtect"},{"location":"info/en_us/PLUGINS/USEFUL_PLUGINS/#server-management-plugins","text":"The plugins in this category have a focus on giving staff the tools to moderate chat and gameplay as well as managing the server.","title":"Server Management Plugins"},{"location":"info/en_us/PLUGINS/USEFUL_PLUGINS/#clearlagg","text":"Designed with reducing lag as the primary goal, clearlag has grown over the years to target multiple sources of lag/exploits that plague minecraft servers and drastically decrease overall performance. Whether it be by culling entities, limiting mob-spawners, limiting mob-eggs, limiting mob-breeding, setting per-item entity live-time, the list goes on. ClearLagg gives staff useful tools for clearing and preventing lag on a Minecraft server. NOTE : In most cases this will actually increase lag due to the plugin's slow, heavy tasks on main thread.","title":"ClearLagg"},{"location":"info/en_us/PLUGINS/USEFUL_PLUGINS/#tebexpreviously-buycraft","text":"Featuring full UUID support and Mojang username verification as well as supporting offline mode servers, Tebex has the ability and the feature set to power even the largest of server communities. Tebex creates a webstore that you can link with your Minecraft server to accept donations or purchase ranks, items, or kits.","title":"Tebex(Previously BuyCraft)"},{"location":"info/en_us/PLUGINS/USEFUL_PLUGINS/#staff","text":"Staff+ is a plugin that adds many useful features for staff members and players. It has a lot of features, like vanish, testing for a player's CPS, viewing a player's inventory, reports(from players), warnings(from staff), tickets, and more.","title":"Staff+"},{"location":"info/en_us/PLUGINS/USEFUL_PLUGINS/#voting-plugin","text":"Highly customizable vote listener with many features! Voting Plugin is an advance vote listener, paired with Votifier , NuVotifier , or VotifierPlus , you can configure it so that players can recieve rewards for voting.","title":"Voting Plugin"},{"location":"info/en_us/PLUGINS/USEFUL_PLUGINS/#luckperms","text":"LuckPerms is a permissions plugin for Minecraft servers. It allows server admins to control what features players can use by creating groups and assigning permissions. LuckPerms is a permissions plugin that can be configure to have ranks that each have their own specific permissions. Most plugins have permissions setup that LuckPerms can control.","title":"LuckPerms"},{"location":"info/en_us/PLUGINS/USEFUL_PLUGINS/#viaversion","text":"Our aim is to allow newer client versions to connect to older server versions. Just drag and drop it into the plugin folder and you're done, see below if you use a proxy like BungeeCord. We currently support Spigot / BungeeCord / Sponge / Velocity. ViaVersion allows players to connect to older servers with newer clients.","title":"ViaVersion"},{"location":"resources/kubernetes/k3s-simple/README.en_us/","text":"K3s Simple Setup \u00b6 Due to the various versions of kubernetes references below will be focused on deploying to a k3s.io cluster. If you want information on how to spin up a cluster please check out the k3s.io link. Getting started \u00b6 Creating the project \u00b6 First we want to set up a project folder. Please create one and open it with your favorite text editor. Copy the contents of this directoy into your project directory. Spin-up \u00b6 This will create the resources! # We create the namespace first always before we spin up. kubectl apply -f ./base/01-namespace.yml # Now we can spin everything up. kubectl apply -k . Spin-down \u00b6 This will remove all resources! kubectl delete -k . Breakdown \u00b6 Namespace \u00b6 This drives where the deployment will be filed under. Its best practices to segement each deployment in its own namespace. Namespace documentaion can be found here Kustomization \u00b6 The kustomization file is used to build a project and correlate data across multiple files. If you are looking for more details on documentation for kustomization click here . Persisted Volume Claim \u00b6 This is where your data is stored! It contains all data pertaining to your minecraft server and should be backed up! As a recommendation take a look at Velero . However, if you are looking for more information on persisted volume claims click here Deployment \u00b6 The deployment is what actually spins up your server and its related content. You can get more advanced with your deployment by adding additional environment variables, an admin panel, or other tools to help you administrait it. More information on deployments can be found here Join Service \u00b6 This provides the connection to your minecraft server! Its highly recommended to have a failover IP set as your external IP in a simple deployment. In a more advanced example you might want to have a proxy as your ingress if you are catering to multiple minecraft servers. More information on services can be found here","title":"K3s Simple Setup"},{"location":"resources/kubernetes/k3s-simple/README.en_us/#k3s-simple-setup","text":"Due to the various versions of kubernetes references below will be focused on deploying to a k3s.io cluster. If you want information on how to spin up a cluster please check out the k3s.io link.","title":"K3s Simple Setup"},{"location":"resources/kubernetes/k3s-simple/README.en_us/#getting-started","text":"","title":"Getting started"},{"location":"resources/kubernetes/k3s-simple/README.en_us/#creating-the-project","text":"First we want to set up a project folder. Please create one and open it with your favorite text editor. Copy the contents of this directoy into your project directory.","title":"Creating the project"},{"location":"resources/kubernetes/k3s-simple/README.en_us/#spin-up","text":"This will create the resources! # We create the namespace first always before we spin up. kubectl apply -f ./base/01-namespace.yml # Now we can spin everything up. kubectl apply -k .","title":"Spin-up"},{"location":"resources/kubernetes/k3s-simple/README.en_us/#spin-down","text":"This will remove all resources! kubectl delete -k .","title":"Spin-down"},{"location":"resources/kubernetes/k3s-simple/README.en_us/#breakdown","text":"","title":"Breakdown"},{"location":"resources/kubernetes/k3s-simple/README.en_us/#namespace","text":"This drives where the deployment will be filed under. Its best practices to segement each deployment in its own namespace. Namespace documentaion can be found here","title":"Namespace"},{"location":"resources/kubernetes/k3s-simple/README.en_us/#kustomization","text":"The kustomization file is used to build a project and correlate data across multiple files. If you are looking for more details on documentation for kustomization click here .","title":"Kustomization"},{"location":"resources/kubernetes/k3s-simple/README.en_us/#persisted-volume-claim","text":"This is where your data is stored! It contains all data pertaining to your minecraft server and should be backed up! As a recommendation take a look at Velero . However, if you are looking for more information on persisted volume claims click here","title":"Persisted Volume Claim"},{"location":"resources/kubernetes/k3s-simple/README.en_us/#deployment","text":"The deployment is what actually spins up your server and its related content. You can get more advanced with your deployment by adding additional environment variables, an admin panel, or other tools to help you administrait it. More information on deployments can be found here","title":"Deployment"},{"location":"resources/kubernetes/k3s-simple/README.en_us/#join-service","text":"This provides the connection to your minecraft server! Its highly recommended to have a failover IP set as your external IP in a simple deployment. In a more advanced example you might want to have a proxy as your ingress if you are catering to multiple minecraft servers. More information on services can be found here","title":"Join Service"},{"location":"tutorials/de_de/EINRICHTUNG/GRUNDLEGEND/","text":"Intro \u00b6 Hier wird dir gezeigt, wie du lokal auf deinem Computer einen Minecraft Server hosten kannst (Muss aber nicht lokal sein, es gibt auch Anleitungen f\u00fcr Server). Einrichtung \u00b6 Bevor man irgendetwas tut, sollte man sich sicher sein, alle Voraussetzungen zu haben. Es wird eine aktuelle Java-Version ben\u00f6tigt, zur Zeit ist das die Version 15.0.2, der Download ist bei https://www.oracle.com/java/technologies/javase-jdk15-downloads.html Die Voraussetzungen f\u00fcr die Hardware sind nicht besonders hoch, aber beschr\u00e4nken den Server-Typ. Wenn du nur einen Vanilla-Server mit ein paar Spielern haben willst, dann ist das nicht sehr wichtig, aber wenn du mehr dar\u00fcber lernen willst. Viele CPU-Kerne bringen nur wenig, da Minecraft nur in einem Thread (\"in einem Kern\") l\u00e4uft, sondern man sollte sich eher darauf konzentrieren, dass ein Thread viel Leistung bringt. Zudem braucht man auch ein bisschen RAM, 2-4 GB f\u00fcr Vanilla-Server aber eher 8 GB f\u00fcr Server mit Plugins und/oder Mods. Wenn du alle Voraussetzungen hast, musst du das passende Server-JAR finden (siehe Das richtige Server-JAR finden ) Wenn du nur einen Vanilla-Server haben willst, ist es sinnvoll, die JARs von MCVersions herunterzuladen, da dort auch \u00e4ltere Versionen verf\u00fcgbar sind. Einrichtung auf Windows \u00b6 Nachdem du das Server-JAR heruntergeladen hast, erstelle einen neuen Ordner und kopiere das JAR in diesen Ordner und benenne es zu server.jar . Jetzt brauchen wir noch eine Datei, um den Server auch auszuf\u00fchren, also erstelle eine Datei namens run.bat und schreibe das folgende in diese Datei: java -Xmx1024M -Xms1024M -jar server.jar nogui PAUSE Das 1024M steht, daf\u00fcr, dass der Server 1024 MiB, also 1 GiB RAM bekommt. 1024 oder 2048 sollten erst einmal reichen, bei Mods oder Plugins muss man vielleicht noch mehr zuteilen. Jetzt k\u00f6nnen wir den Server ausf\u00fchren, also doppelklicke die Datei run.bat . Dadurch \u00f6ffnet sich ein neues Konsolenfenster. Dort wird nach kurzer Zeit der Text You need to agree to the EULA in order to run the server. Go to eula.txt for more info. auftauchen. Bearbeite die neu generierte Datei eula.txt und ersetze eula=false mit eula=true . Dann doppelklicke nochmal run.bat Jetzt kannst du dein Minecraft starten und dich mit dem Server verbinden. Daf\u00fcr schreibe als Server-Adresse localhost oder 127.0.0.1 . Einrichtung auf Linux \u00b6 Achtung: Du solltest eher den Package Manager (zum Beispiel apt(-get) auf Ubuntu und Debian) benutzen um Java installieren Erstelle einen Ordner, zum Beispiel ~/server \u2192 mkdir ~/server Kopiere dein Server-JAR in diesen Ordner und benenne es um zu server.jar \u2192 mv ~/Downloads/spigot-1.16.5.jar ~/server/server.jar Erstelle eine Datei namens start.sh und schreibe in diese: java -Xmx1024M -jar server-jar nogui (es kann sein, dass das nogui nicht ben\u00f6tigt wird) \u2192 echo \"java -Xmx1024M -jar server.jar nogui\" > start.sh Jetzt f\u00fcge Ausf\u00fchrungs-Berechtigungen dem Skript zu und f\u00fchre es aus \u2192 chmod +x start.sh \u2192 ./start.sh Jetzt wird nach kurzer Zeit der Text You need to agree to the EULA in order to run the server. Go to eula.txt for more info. auftauchen, also musst du die neue Datei eula.txt bearbeiten und das eula=false mit eula=true ersetzen \u2192 echo \"eula=true\" > eula.txt (Achtung: Dies \u00fcberschreibt den Kommentar mit dem Link zur EULA) Jetzt f\u00fchre den Server (bzw das start.sh ) erneut aus. Jetzt kannst du dein Minecraft starten und dich mit dem Server verbinden. Daf\u00fcr schreibe als Server-Adresse localhost oder 127.0.0.1 . Einrichtung f\u00fcr Server \u00b6 Man braucht einen \"service\", wenn der Server z. B. automatisch starten oder neustarten soll. Erstelle eine Datei namens minecraft.service in /etc/systemd/system (es kann sein, dass man root-Berechtigungen braucht) \u2192 sudo touch /etc/systemd/system/minecraft.service Und dann f\u00fclle die Datei mit folgendem: [Unit] Description=A Minecraft Server After=network.target StartLimitIntervalSec=0[Service] Type=simple Restart=always RestartSec=1 User={DEINBENUTZERNAME} ExecStart=/home/{DEINBENUTZERNAME}/server/start.sh ersetze {DEINBENUTZERNAME} mit deinem Benutzernamen \u2192 sudo echo \"[Unit]\\nDescription=A Minecraft Server\\nAfter=network.target\\nStartLimitIntervalSec=0[Service]\\nType=simple\\nRestart=alwaysRestartSec=1\\nUser=$USER\\nExecStart=$HOME/server/start.sh\" > /etc/systemd/system/minecraft.service jetzt kannst du den Service starten \u2192 systemctl start minecraft Jetzt solltest du dem Server beitreten k\u00f6nnen. Der Server wird 1 Sekunde, nachdem er heruntergefahren ist, automatisch neustarten. Wenn der Server starten soll, wenn der Server startet, musst du es enablen \u2192 systemctl enable minecraft Einrichtung f\u00fcr Docker \u00b6 Um Docker zu benutzen, erstelle eine Datei namens Dockerfile und schreibe Folgendes in sie: FROM openjdk WORKDIR /root COPY [ \"server.jar\" , \"eula.txt\" , \"start.sh\" ] ./ EXPOSE 25565 ENTRYPOINT [ \"/root/start.sh\" ] \u2192 echo \"FROM openjdk\\nWORKDIR /root\\nCOPY [\"server.jar\",\"eula.txt\", \"start.sh\"] ./\\nEXPOSE 25565\\nENTRYPOINT [\"/root/start.sh\"]\" > Dockerfile Jetzt kannst du das Docker-Image bauen \u2192 docker build . -t mcserver (Du kannst mcserver ersetzen durch was du willst (au\u00dfer es gibt ein gleichnamiges Image auf DockerHub)) Jetzt kannst du einen Container starten \u2192 docker run --name mcserver -p 25565:25565 -d --restart unless-stopped mcserver Oder du benutzt Docker-Compose, dann schreibe folgendes in eine Datei namens docker-compose.yml : version: \"3\" services: mcserver: build: . restart: unless stopped ports: - 25565:25565 \u2192 echo \"version: \"3\"\\nservices:\\n mcserver:\\n build: .\\n restart: unless stopped\\n ports:\\n - 25565:25565\" > docker-compose.yml und starte es \u2192 docker-compose up -d","title":"Intro"},{"location":"tutorials/de_de/EINRICHTUNG/GRUNDLEGEND/#intro","text":"Hier wird dir gezeigt, wie du lokal auf deinem Computer einen Minecraft Server hosten kannst (Muss aber nicht lokal sein, es gibt auch Anleitungen f\u00fcr Server).","title":"Intro"},{"location":"tutorials/de_de/EINRICHTUNG/GRUNDLEGEND/#einrichtung","text":"Bevor man irgendetwas tut, sollte man sich sicher sein, alle Voraussetzungen zu haben. Es wird eine aktuelle Java-Version ben\u00f6tigt, zur Zeit ist das die Version 15.0.2, der Download ist bei https://www.oracle.com/java/technologies/javase-jdk15-downloads.html Die Voraussetzungen f\u00fcr die Hardware sind nicht besonders hoch, aber beschr\u00e4nken den Server-Typ. Wenn du nur einen Vanilla-Server mit ein paar Spielern haben willst, dann ist das nicht sehr wichtig, aber wenn du mehr dar\u00fcber lernen willst. Viele CPU-Kerne bringen nur wenig, da Minecraft nur in einem Thread (\"in einem Kern\") l\u00e4uft, sondern man sollte sich eher darauf konzentrieren, dass ein Thread viel Leistung bringt. Zudem braucht man auch ein bisschen RAM, 2-4 GB f\u00fcr Vanilla-Server aber eher 8 GB f\u00fcr Server mit Plugins und/oder Mods. Wenn du alle Voraussetzungen hast, musst du das passende Server-JAR finden (siehe Das richtige Server-JAR finden ) Wenn du nur einen Vanilla-Server haben willst, ist es sinnvoll, die JARs von MCVersions herunterzuladen, da dort auch \u00e4ltere Versionen verf\u00fcgbar sind.","title":"Einrichtung"},{"location":"tutorials/de_de/EINRICHTUNG/GRUNDLEGEND/#einrichtung-auf-windows","text":"Nachdem du das Server-JAR heruntergeladen hast, erstelle einen neuen Ordner und kopiere das JAR in diesen Ordner und benenne es zu server.jar . Jetzt brauchen wir noch eine Datei, um den Server auch auszuf\u00fchren, also erstelle eine Datei namens run.bat und schreibe das folgende in diese Datei: java -Xmx1024M -Xms1024M -jar server.jar nogui PAUSE Das 1024M steht, daf\u00fcr, dass der Server 1024 MiB, also 1 GiB RAM bekommt. 1024 oder 2048 sollten erst einmal reichen, bei Mods oder Plugins muss man vielleicht noch mehr zuteilen. Jetzt k\u00f6nnen wir den Server ausf\u00fchren, also doppelklicke die Datei run.bat . Dadurch \u00f6ffnet sich ein neues Konsolenfenster. Dort wird nach kurzer Zeit der Text You need to agree to the EULA in order to run the server. Go to eula.txt for more info. auftauchen. Bearbeite die neu generierte Datei eula.txt und ersetze eula=false mit eula=true . Dann doppelklicke nochmal run.bat Jetzt kannst du dein Minecraft starten und dich mit dem Server verbinden. Daf\u00fcr schreibe als Server-Adresse localhost oder 127.0.0.1 .","title":"Einrichtung auf Windows"},{"location":"tutorials/de_de/EINRICHTUNG/GRUNDLEGEND/#einrichtung-auf-linux","text":"Achtung: Du solltest eher den Package Manager (zum Beispiel apt(-get) auf Ubuntu und Debian) benutzen um Java installieren Erstelle einen Ordner, zum Beispiel ~/server \u2192 mkdir ~/server Kopiere dein Server-JAR in diesen Ordner und benenne es um zu server.jar \u2192 mv ~/Downloads/spigot-1.16.5.jar ~/server/server.jar Erstelle eine Datei namens start.sh und schreibe in diese: java -Xmx1024M -jar server-jar nogui (es kann sein, dass das nogui nicht ben\u00f6tigt wird) \u2192 echo \"java -Xmx1024M -jar server.jar nogui\" > start.sh Jetzt f\u00fcge Ausf\u00fchrungs-Berechtigungen dem Skript zu und f\u00fchre es aus \u2192 chmod +x start.sh \u2192 ./start.sh Jetzt wird nach kurzer Zeit der Text You need to agree to the EULA in order to run the server. Go to eula.txt for more info. auftauchen, also musst du die neue Datei eula.txt bearbeiten und das eula=false mit eula=true ersetzen \u2192 echo \"eula=true\" > eula.txt (Achtung: Dies \u00fcberschreibt den Kommentar mit dem Link zur EULA) Jetzt f\u00fchre den Server (bzw das start.sh ) erneut aus. Jetzt kannst du dein Minecraft starten und dich mit dem Server verbinden. Daf\u00fcr schreibe als Server-Adresse localhost oder 127.0.0.1 .","title":"Einrichtung auf Linux"},{"location":"tutorials/de_de/EINRICHTUNG/GRUNDLEGEND/#einrichtung-fur-server","text":"Man braucht einen \"service\", wenn der Server z. B. automatisch starten oder neustarten soll. Erstelle eine Datei namens minecraft.service in /etc/systemd/system (es kann sein, dass man root-Berechtigungen braucht) \u2192 sudo touch /etc/systemd/system/minecraft.service Und dann f\u00fclle die Datei mit folgendem: [Unit] Description=A Minecraft Server After=network.target StartLimitIntervalSec=0[Service] Type=simple Restart=always RestartSec=1 User={DEINBENUTZERNAME} ExecStart=/home/{DEINBENUTZERNAME}/server/start.sh ersetze {DEINBENUTZERNAME} mit deinem Benutzernamen \u2192 sudo echo \"[Unit]\\nDescription=A Minecraft Server\\nAfter=network.target\\nStartLimitIntervalSec=0[Service]\\nType=simple\\nRestart=alwaysRestartSec=1\\nUser=$USER\\nExecStart=$HOME/server/start.sh\" > /etc/systemd/system/minecraft.service jetzt kannst du den Service starten \u2192 systemctl start minecraft Jetzt solltest du dem Server beitreten k\u00f6nnen. Der Server wird 1 Sekunde, nachdem er heruntergefahren ist, automatisch neustarten. Wenn der Server starten soll, wenn der Server startet, musst du es enablen \u2192 systemctl enable minecraft","title":"Einrichtung f\u00fcr Server"},{"location":"tutorials/de_de/EINRICHTUNG/GRUNDLEGEND/#einrichtung-fur-docker","text":"Um Docker zu benutzen, erstelle eine Datei namens Dockerfile und schreibe Folgendes in sie: FROM openjdk WORKDIR /root COPY [ \"server.jar\" , \"eula.txt\" , \"start.sh\" ] ./ EXPOSE 25565 ENTRYPOINT [ \"/root/start.sh\" ] \u2192 echo \"FROM openjdk\\nWORKDIR /root\\nCOPY [\"server.jar\",\"eula.txt\", \"start.sh\"] ./\\nEXPOSE 25565\\nENTRYPOINT [\"/root/start.sh\"]\" > Dockerfile Jetzt kannst du das Docker-Image bauen \u2192 docker build . -t mcserver (Du kannst mcserver ersetzen durch was du willst (au\u00dfer es gibt ein gleichnamiges Image auf DockerHub)) Jetzt kannst du einen Container starten \u2192 docker run --name mcserver -p 25565:25565 -d --restart unless-stopped mcserver Oder du benutzt Docker-Compose, dann schreibe folgendes in eine Datei namens docker-compose.yml : version: \"3\" services: mcserver: build: . restart: unless stopped ports: - 25565:25565 \u2192 echo \"version: \"3\"\\nservices:\\n mcserver:\\n build: .\\n restart: unless stopped\\n ports:\\n - 25565:25565\" > docker-compose.yml und starte es \u2192 docker-compose up -d","title":"Einrichtung f\u00fcr Docker"},{"location":"tutorials/de_de/JARS/FINDEN/","text":"Intro \u00b6 Hier wirst du lernen, wie du ein Server-JAR aussuchst. Picking your server jar \u00b6 Erstmal musst du wissen, was f\u00fcr einen Server du \u00fcberhaupt haben willst, z. B. survival, prisons, minigames, und welche Minecraft-Version willst du verwenden? Wir zeigen dir grundlegende JARs, f\u00fcr genauere Erkl\u00e4rungen, siehe hier 1.13 und neuer - Ein guter Server ist Purpur , es verbessert Leistung und hat viele Funktionen (FLIEGENDE TINTENFISCHE!) 1.12 und \u00e4lter - PaperMC ist meistens die beste Option f\u00fcr \u00e4ltere Versionen","title":"Intro"},{"location":"tutorials/de_de/JARS/FINDEN/#intro","text":"Hier wirst du lernen, wie du ein Server-JAR aussuchst.","title":"Intro"},{"location":"tutorials/de_de/JARS/FINDEN/#picking-your-server-jar","text":"Erstmal musst du wissen, was f\u00fcr einen Server du \u00fcberhaupt haben willst, z. B. survival, prisons, minigames, und welche Minecraft-Version willst du verwenden? Wir zeigen dir grundlegende JARs, f\u00fcr genauere Erkl\u00e4rungen, siehe hier 1.13 und neuer - Ein guter Server ist Purpur , es verbessert Leistung und hat viele Funktionen (FLIEGENDE TINTENFISCHE!) 1.12 und \u00e4lter - PaperMC ist meistens die beste Option f\u00fcr \u00e4ltere Versionen","title":"Picking your server jar"},{"location":"tutorials/en_us/COMMUNITY/","text":"Community \u00b6 A community is key for a Minecraft server. It keeps players connected to your server. It also makes your server a fun place. A community is not for sale, but it is worth a lot. You build a community and have to maintain a community as a true leader. We'll discuss three things in this guide: building a community, maintaining a community and some general tips. Before discussing how to build and maintain a community, it's important to understand why people become part of a community and what they are looking for there. With this basis in mind, we can then look at how you can set up a community yourself. To become an active member of a community, four things are needed: meaning, value, agency and urgency. This boils down to the following: if someone attaches meaning and value to what is done in a community (it is about the interests and it is interesting to read) and at the same time there is a sense of agency to participate in the discussions and if you can't wait until tomorrow, then you know for sure that your members will join your community. If one of these aspects is missing, you will soon see that people give up. But at the same time, safety is also very important in a good community. This safety is a very broad concept, but it boils down to keeping your members secure and to the mutual respect of the members towards each other. If this is optimal, then members will also want to go through fire to protect the community. Building a community \u00b6 Building a community is the first step. A community often comes together automatically, if you create the opportunity. Create a Discord, Teamspeak or another group and share the link with your current players. Keep in mind that you are always growing slower than you want. Especially at the beginning, because every beginning is difficult. But also know that growth is exponential: the more players you have, the greater your reach, the faster you grow! People hate taking steps, reading and thinking about registering. The more complicated your process is to register on Minecraft / Discord, the more players will drop out. For players who drop out, it is very difficult to come back. So make sure that you only let players take the most necessary steps. If you still want to collect more information about your community members, consider other options. For example, you can encourage players to complete their profile or link their Discord to their Minecraft. This is extra effective by rewarding them at the end. Remember that you don't want to just advertise everywhere. Think about your target audience and aim your ads at them. If you do not advertise to your target group, players will appear who do not fit the current or intended community. There is always quality versus quantity, you would rather have a player that gives you pleasure than 10 that only costs you effort. Maintaining your community \u00b6 A community must remain \"alive\". That means there is activity, members talk to each other, come up with ideas and do things. When a community comes to a standstill, it is very difficult to get the community going again. So always make sure that your community stays going. One of the best ways to keep members engaged is events. This can be incredibly lengthy and doesn't even have to be related to Minecraft. As long as members interact with each other To keep a community a fun place, there should be as few \"bad apples\" in your community as possible. These are members who don't want the best for the community. Think of toxic members, trolls, bullies, and so on. This is best done by showing individual members that they themselves are responsible for their community, but at the same time it is very difficult. And on top of that, the more members a community has, the less likely the individual will feel responsible. General tips \u00b6 Always stay nice. If you react unkindly or bluntly yourself, this is a sign to players that this is the way to communicate within your community. At the same time, it is also clear that a toxic community can never survive. At the same time, the advice is to be clear. What are the rules and where are the boundaries. Be consistent and stay above your community. A community makes your server stronger. Use your community for feedback, because you can learn from a community what your strengths are and where you can improve. Do not use your community to only send announcements. Finally, remember: it is easy to leave a server, it is much difficult to leave a community (and therefore friends).","title":"Community"},{"location":"tutorials/en_us/COMMUNITY/#community","text":"A community is key for a Minecraft server. It keeps players connected to your server. It also makes your server a fun place. A community is not for sale, but it is worth a lot. You build a community and have to maintain a community as a true leader. We'll discuss three things in this guide: building a community, maintaining a community and some general tips. Before discussing how to build and maintain a community, it's important to understand why people become part of a community and what they are looking for there. With this basis in mind, we can then look at how you can set up a community yourself. To become an active member of a community, four things are needed: meaning, value, agency and urgency. This boils down to the following: if someone attaches meaning and value to what is done in a community (it is about the interests and it is interesting to read) and at the same time there is a sense of agency to participate in the discussions and if you can't wait until tomorrow, then you know for sure that your members will join your community. If one of these aspects is missing, you will soon see that people give up. But at the same time, safety is also very important in a good community. This safety is a very broad concept, but it boils down to keeping your members secure and to the mutual respect of the members towards each other. If this is optimal, then members will also want to go through fire to protect the community.","title":"Community"},{"location":"tutorials/en_us/COMMUNITY/#building-a-community","text":"Building a community is the first step. A community often comes together automatically, if you create the opportunity. Create a Discord, Teamspeak or another group and share the link with your current players. Keep in mind that you are always growing slower than you want. Especially at the beginning, because every beginning is difficult. But also know that growth is exponential: the more players you have, the greater your reach, the faster you grow! People hate taking steps, reading and thinking about registering. The more complicated your process is to register on Minecraft / Discord, the more players will drop out. For players who drop out, it is very difficult to come back. So make sure that you only let players take the most necessary steps. If you still want to collect more information about your community members, consider other options. For example, you can encourage players to complete their profile or link their Discord to their Minecraft. This is extra effective by rewarding them at the end. Remember that you don't want to just advertise everywhere. Think about your target audience and aim your ads at them. If you do not advertise to your target group, players will appear who do not fit the current or intended community. There is always quality versus quantity, you would rather have a player that gives you pleasure than 10 that only costs you effort.","title":"Building a community"},{"location":"tutorials/en_us/COMMUNITY/#maintaining-your-community","text":"A community must remain \"alive\". That means there is activity, members talk to each other, come up with ideas and do things. When a community comes to a standstill, it is very difficult to get the community going again. So always make sure that your community stays going. One of the best ways to keep members engaged is events. This can be incredibly lengthy and doesn't even have to be related to Minecraft. As long as members interact with each other To keep a community a fun place, there should be as few \"bad apples\" in your community as possible. These are members who don't want the best for the community. Think of toxic members, trolls, bullies, and so on. This is best done by showing individual members that they themselves are responsible for their community, but at the same time it is very difficult. And on top of that, the more members a community has, the less likely the individual will feel responsible.","title":"Maintaining your community"},{"location":"tutorials/en_us/COMMUNITY/#general-tips","text":"Always stay nice. If you react unkindly or bluntly yourself, this is a sign to players that this is the way to communicate within your community. At the same time, it is also clear that a toxic community can never survive. At the same time, the advice is to be clear. What are the rules and where are the boundaries. Be consistent and stay above your community. A community makes your server stronger. Use your community for feedback, because you can learn from a community what your strengths are and where you can improve. Do not use your community to only send announcements. Finally, remember: it is easy to leave a server, it is much difficult to leave a community (and therefore friends).","title":"General tips"},{"location":"tutorials/en_us/MODERATION/","text":"Moderating a Minecraft server \u00b6 Just as server settings are subject to debate, so is moderating a server. Everyone does it in their own way. But how efficient and good your server settings are is measurable. How well you moderate is much less measurable. Therefore, please see this part of the guide as well-intentioned advice and not as hard rules. Rules and sanctions \u00b6 Before you can decide what rules to implement, it's important to determine what kind of server you want to run. After all, a family-friendly server for children has very different rules than an anarchy server. Often you will be looking for a balance between player freedom and player safety. For most servers, a good basis to adhere to is: a player's freedom stops when other players are bothered by actions. Before the server opens \u00b6 Before your server opens, set the rules. In a small server with friends, you agree among yourselves that you will not cheat, use X-ray or other tools. In a server for larger audiences, this is often not enough. What do you do when someone deliberately tries to cause lag and where do you draw the line in the chat? One tip is to bring out the bad in yourself and think about what you don't want to have. Below is a list of actions that are prohibited on many servers: Chat Cursing/racism Spam Advertising Sharing private information Threatening players Inappropriate name/skin Game Inappropriate Buildings Griefing Anti-afk system Lagging Hacks X-ray Hacked Client Bug abuse Server Corrupt making inventories Crashing server With a server for larger audiences, you should also share the rules. Publish them on your website, put them in the spawn or give players in the lobby a book. This way the players know what is and what is not allowed on your server. This also stops the excuse: \"I didn't know this was forbidden\". Enforce and discuss \u00b6 After you have determined the rules and the server is open, you must enforce the rules. One advice is to at least make sure that different staff members are giving out the same punishments. You can also talk with the moderator team on a regular basis. Ask if the rules are still sufficient, if anything unusual has happened and maybe adjust some rules. In this way you remain flexible and grow with your community. Moderation tools \u00b6 Make it as easy as possible for moderators with good tools. CoreProtect, for example, allows you to log all player actions and fix them. Make sure you have a good plugin that keeps track of IP history; this way alt accounts can be easily identified. Furthermore you can use an anti-cheat plugin, chatfilter or inventory-backup plugin. In general you can say that the more data you store, the more you can find, reset or use.","title":"Moderating a Minecraft server"},{"location":"tutorials/en_us/MODERATION/#moderating-a-minecraft-server","text":"Just as server settings are subject to debate, so is moderating a server. Everyone does it in their own way. But how efficient and good your server settings are is measurable. How well you moderate is much less measurable. Therefore, please see this part of the guide as well-intentioned advice and not as hard rules.","title":"Moderating a Minecraft server"},{"location":"tutorials/en_us/MODERATION/#rules-and-sanctions","text":"Before you can decide what rules to implement, it's important to determine what kind of server you want to run. After all, a family-friendly server for children has very different rules than an anarchy server. Often you will be looking for a balance between player freedom and player safety. For most servers, a good basis to adhere to is: a player's freedom stops when other players are bothered by actions.","title":"Rules and sanctions"},{"location":"tutorials/en_us/MODERATION/#before-the-server-opens","text":"Before your server opens, set the rules. In a small server with friends, you agree among yourselves that you will not cheat, use X-ray or other tools. In a server for larger audiences, this is often not enough. What do you do when someone deliberately tries to cause lag and where do you draw the line in the chat? One tip is to bring out the bad in yourself and think about what you don't want to have. Below is a list of actions that are prohibited on many servers: Chat Cursing/racism Spam Advertising Sharing private information Threatening players Inappropriate name/skin Game Inappropriate Buildings Griefing Anti-afk system Lagging Hacks X-ray Hacked Client Bug abuse Server Corrupt making inventories Crashing server With a server for larger audiences, you should also share the rules. Publish them on your website, put them in the spawn or give players in the lobby a book. This way the players know what is and what is not allowed on your server. This also stops the excuse: \"I didn't know this was forbidden\".","title":"Before the server opens"},{"location":"tutorials/en_us/MODERATION/#enforce-and-discuss","text":"After you have determined the rules and the server is open, you must enforce the rules. One advice is to at least make sure that different staff members are giving out the same punishments. You can also talk with the moderator team on a regular basis. Ask if the rules are still sufficient, if anything unusual has happened and maybe adjust some rules. In this way you remain flexible and grow with your community.","title":"Enforce and discuss"},{"location":"tutorials/en_us/MODERATION/#moderation-tools","text":"Make it as easy as possible for moderators with good tools. CoreProtect, for example, allows you to log all player actions and fix them. Make sure you have a good plugin that keeps track of IP history; this way alt accounts can be easily identified. Furthermore you can use an anti-cheat plugin, chatfilter or inventory-backup plugin. In general you can say that the more data you store, the more you can find, reset or use.","title":"Moderation tools"},{"location":"tutorials/en_us/REMOTE_SERVER_MANAGEMENT/","text":"Remote Server Management \u00b6 The goal of this tutorial is to give you everything you need to manage your server when you don't have access to the physical machine. This tutorial is primarily for someone on a Windows system connecting to a Linux server. Table of Contents \u00b6 Command Line Access (SSH) PuTTY Shortcut Setup tmux Attaching Sessions Sending keys Shortcuts File Management (FileZilla) Connecting Navigation Transferring Files Editing Files Conclusion Command Line Access (SSH) \u00b6 Since a lot of interaction with a Minecraft server is through its command line terminal, your primary tool for interacting with your remote server will be SSH. SSH (Secure Shell) is a tool that allows you to securely connect to a remote computer. You can use it through any terminal; below is me using SSH in the default Windows CMD to connect to a server on my local network. The basic syntax for this is ssh <username>@<IP address> . It'll prompt you for a password, and then you're in. However, there are better tools for using SSH, like PuTTY. PuTTY \u00b6 PuTTY is a very well-regarded free SSH program. Here's a view of the main menu below: Don't worry, though\u2014you don't have to learn any of that. One of the best parts of PuTTY is that you can bypass having to enter your credentials, letting PuTTY take care of that for you. This is done through a shortcut with arguments. Shortcut Setup \u00b6 Find the default PuTTY shortcuts. Press the Windows key Win and search for \"putty\". Right-click on the app result, and click \"Open file location\". The default location for this is C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\PuTTY (64-bit) . Copy the \"PuTTY\" shortcut, and paste it in the directory C:\\Users\\<username>\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs . You can rename it to something recognizable by you, such as \"SSH Minecraft Server\". Open the shortcut's properties (Right-click, \"Properties\"). In \"Target\", enter this: \"C:\\Program Files\\PuTTY\\putty.exe\" -ssh <username>@<IP address> -pw <password> . Be sure to add your proper credentials. You may need to change your path to putty.exe if you have it installed in a different location. This gives PuTTY arguments to use when you start it. The arguments are the IP address/user you want to connect to, and the password to use for that user. Note that this stores your password in plaintext. If you don't want that, you can remove the -pw <password> argument, and it will prompt you to enter your password each time you run the shortcut. That's it! You now have a shortcut for PuTTY set up. You can open the shortcut by pressing the Windows key Win and searching for its name\u2014this makes it super easy to open. You can use this SSH connection to do anything on the command-line that you'd be able to do with physical keyboard, mouse, and monitor access. tmux \u00b6 tmux is an invaluable tool for a Linux server that allows you to have several processes running on different virtual windows, allowing you to switch between them. tmux lets you run your Minecraft server in the background, letting you use the Linux terminal without stopping the server. To explain better: You SSH into your server. By default, you're now in the Linux terminal. You can run a tmux command that switches you to your Minecrft server's virtual window. Here, you can interact with your Minecraft server's terminal as normal. You use a keyboard shortcut to switch back to the main Linux terminal. From here, you can interact with the Linux OS like normal. You can switch to other tmux virtual windows/processes, too, if you have other things going on. If tmux isn't installed already, you can do so with this command: sudo apt-get install tmux . You can use bash files and tmux commands to set up scripts to do all kinds of stuff to your server, but we'll go over some basic functionality now. Here's a nice low-level tmux tutorial that goes into more detail. First, you need to create a tmux virtual window, called a session. Use the cd command to switch to your Minecraft server directory. Then, run the command tmux new-session -d -s <session name> . This starts a new tmux session in your current location. The -d starts the session detached, meaning you don't automatically switch to it. -s <session name> specifies the session's name, which is used to refer to it in other commands. Now, there are a few things you can do to access the session. Attaching sessions \u00b6 Attaching \u00b6 The tmux command for attaching a session is tmux attach-session -t <session name> . When you run it, your terminal will switch from the normal Linux terminal to the tmux session's terminal. While the session is attached, any commands run will be sent to that session. For example, if you attach the session tmux attach-session -t minecraft-server , you can run the command say Hello! , and it will be sent to the Minecraft server command-line (saying \"Hello!\" as the server), not to the Linux command-line. Detaching \u00b6 To detach the tmux session, returning to the regular Linux terminal, use the keyboard shortcut Ctrl + B , then press D . Sending keys \u00b6 To send commands to the session without switching to it, use the command tmux send-keys -t <session name>.0 \"<command>\" ENTER . There's a lot to unpack in that command: You're using the tmux command send-keys to send, well, key press input to a tmux session. You're using -t <session name>.0 to specify what tmux session you're referring to. The -t argument is used in tmux commands to do this. The .0 at the end of the session name specifies the window you want to send the keys to. This tutorial doesn't use tmux windows, but they're pretty simple: you can have multiple windows in one tmux session, switching between them. \"<command>\" ENTER has the actual keys you want sent to the tmux session. A single-line command is stored in the quotation marks, and by sending the key ENTER at the end you'll cause the session to actually run the command. You should be able to repeat this syntax several times to send multiple commands, or you can run the entire tmux send-keys command several times with a different command contained each time. Here's an example of this: tmux send-keys -t minecraft-server.0 \"sh run_server.sh\" ENTER This sends the command \"sh run_server.sh\" ENTER to the tmux session minecraft-server . This will run the shell file run_server.sh , which probably starts the Minecraft server. Shortcuts \u00b6 Since tmux commands can get sort of long, I like to use Linux aliases to shorten them. These can be set up by editing the .bashrc file in your user's root directory. In the .bashrc file, add this line to the end: alias tmuxx=\"tmux attach-session -t $1\" . Save it and close it. Now, you can run the command tmuxx <session name> , and it will run the longer tmux attach-session command under the hood, attaching your session. The $1 refers to the first argument after the tmuxx command. File Management (FileZilla) \u00b6 You're going to need to be able to access the files on your Minecraft server's machine. This can be done through SFTP (Secure File Transfer Protocol) . The best way to use SFTP is with an SFTP client such as FileZilla . You can see a picture of the FileZilla UI below: Connecting \u00b6 After you've opened FileZilla, use the keyboard shortcut Ctrl + S to open the \"Site Manager\" menu, seen below: Here, you can specify the IP address and your credentials, very similar to SSH. After you've set it all up, click \"Connect\" to connect to the server using SFTP. You'll use Ctrl + S and \"Connect\" to connect to the server using SFTP from now on. Navigation \u00b6 Now, you'll be able to view two locations: Files in a local directory on your computer Files in a remote directory on the remote server You can navigate through each by entering a direct location in the text boxes above the directory viewers or by double-clicking on a directory (double-click .. to go up one directory). Transferring Files \u00b6 There are several methods for transferring files using FileZilla: Select and drag files from one side to the other to transfer all of the selected files. Double-click a file to transfer that single file. Note this behavior on a double-click; double-clicking doesn't run a file or open it in an editor. Editing Files \u00b6 You can edit a file by right-clicking and selecting \"View/Edit\". To set a default file editor, open the settings (\"Edit\" \u2192 \"Settings\" in the top-left) and set it up using your favorite text editor like I have below: Once you've finished editing the file, save it in your editor, and go back to FileZilla. You should be greeted with this prompt: By selecting \"Yes\", the edited file will be transferred to the remote server, overwriting the existing file with your changes. If \"Finished editing and delete local file\" isn't checked, you can continute to edit/save/revert changes on the local file in your editor. If you never check that box, when you close FileZilla it'll warn you that you still have a file locally: If you've finished everything you want to do, you can safely close FileZilla and the SFTP connection will be closed. Conclusion \u00b6 Hopefully, these three tools (PuTTY, tmux, FileZilla) will give you what you need to remotely manage a Minecraft server. Start small, and soon you'll have your host machine set up just the way you want. Good luck!","title":"Remote Server Management"},{"location":"tutorials/en_us/REMOTE_SERVER_MANAGEMENT/#remote-server-management","text":"The goal of this tutorial is to give you everything you need to manage your server when you don't have access to the physical machine. This tutorial is primarily for someone on a Windows system connecting to a Linux server.","title":"Remote Server Management"},{"location":"tutorials/en_us/REMOTE_SERVER_MANAGEMENT/#table-of-contents","text":"Command Line Access (SSH) PuTTY Shortcut Setup tmux Attaching Sessions Sending keys Shortcuts File Management (FileZilla) Connecting Navigation Transferring Files Editing Files Conclusion","title":"Table of Contents"},{"location":"tutorials/en_us/REMOTE_SERVER_MANAGEMENT/#command-line-access-ssh","text":"Since a lot of interaction with a Minecraft server is through its command line terminal, your primary tool for interacting with your remote server will be SSH. SSH (Secure Shell) is a tool that allows you to securely connect to a remote computer. You can use it through any terminal; below is me using SSH in the default Windows CMD to connect to a server on my local network. The basic syntax for this is ssh <username>@<IP address> . It'll prompt you for a password, and then you're in. However, there are better tools for using SSH, like PuTTY.","title":"Command Line Access (SSH)"},{"location":"tutorials/en_us/REMOTE_SERVER_MANAGEMENT/#putty","text":"PuTTY is a very well-regarded free SSH program. Here's a view of the main menu below: Don't worry, though\u2014you don't have to learn any of that. One of the best parts of PuTTY is that you can bypass having to enter your credentials, letting PuTTY take care of that for you. This is done through a shortcut with arguments.","title":"PuTTY"},{"location":"tutorials/en_us/REMOTE_SERVER_MANAGEMENT/#shortcut-setup","text":"Find the default PuTTY shortcuts. Press the Windows key Win and search for \"putty\". Right-click on the app result, and click \"Open file location\". The default location for this is C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\PuTTY (64-bit) . Copy the \"PuTTY\" shortcut, and paste it in the directory C:\\Users\\<username>\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs . You can rename it to something recognizable by you, such as \"SSH Minecraft Server\". Open the shortcut's properties (Right-click, \"Properties\"). In \"Target\", enter this: \"C:\\Program Files\\PuTTY\\putty.exe\" -ssh <username>@<IP address> -pw <password> . Be sure to add your proper credentials. You may need to change your path to putty.exe if you have it installed in a different location. This gives PuTTY arguments to use when you start it. The arguments are the IP address/user you want to connect to, and the password to use for that user. Note that this stores your password in plaintext. If you don't want that, you can remove the -pw <password> argument, and it will prompt you to enter your password each time you run the shortcut. That's it! You now have a shortcut for PuTTY set up. You can open the shortcut by pressing the Windows key Win and searching for its name\u2014this makes it super easy to open. You can use this SSH connection to do anything on the command-line that you'd be able to do with physical keyboard, mouse, and monitor access.","title":"Shortcut Setup"},{"location":"tutorials/en_us/REMOTE_SERVER_MANAGEMENT/#tmux","text":"tmux is an invaluable tool for a Linux server that allows you to have several processes running on different virtual windows, allowing you to switch between them. tmux lets you run your Minecraft server in the background, letting you use the Linux terminal without stopping the server. To explain better: You SSH into your server. By default, you're now in the Linux terminal. You can run a tmux command that switches you to your Minecrft server's virtual window. Here, you can interact with your Minecraft server's terminal as normal. You use a keyboard shortcut to switch back to the main Linux terminal. From here, you can interact with the Linux OS like normal. You can switch to other tmux virtual windows/processes, too, if you have other things going on. If tmux isn't installed already, you can do so with this command: sudo apt-get install tmux . You can use bash files and tmux commands to set up scripts to do all kinds of stuff to your server, but we'll go over some basic functionality now. Here's a nice low-level tmux tutorial that goes into more detail. First, you need to create a tmux virtual window, called a session. Use the cd command to switch to your Minecraft server directory. Then, run the command tmux new-session -d -s <session name> . This starts a new tmux session in your current location. The -d starts the session detached, meaning you don't automatically switch to it. -s <session name> specifies the session's name, which is used to refer to it in other commands. Now, there are a few things you can do to access the session.","title":"tmux"},{"location":"tutorials/en_us/REMOTE_SERVER_MANAGEMENT/#attaching-sessions","text":"","title":"Attaching sessions"},{"location":"tutorials/en_us/REMOTE_SERVER_MANAGEMENT/#attaching","text":"The tmux command for attaching a session is tmux attach-session -t <session name> . When you run it, your terminal will switch from the normal Linux terminal to the tmux session's terminal. While the session is attached, any commands run will be sent to that session. For example, if you attach the session tmux attach-session -t minecraft-server , you can run the command say Hello! , and it will be sent to the Minecraft server command-line (saying \"Hello!\" as the server), not to the Linux command-line.","title":"Attaching"},{"location":"tutorials/en_us/REMOTE_SERVER_MANAGEMENT/#detaching","text":"To detach the tmux session, returning to the regular Linux terminal, use the keyboard shortcut Ctrl + B , then press D .","title":"Detaching"},{"location":"tutorials/en_us/REMOTE_SERVER_MANAGEMENT/#sending-keys","text":"To send commands to the session without switching to it, use the command tmux send-keys -t <session name>.0 \"<command>\" ENTER . There's a lot to unpack in that command: You're using the tmux command send-keys to send, well, key press input to a tmux session. You're using -t <session name>.0 to specify what tmux session you're referring to. The -t argument is used in tmux commands to do this. The .0 at the end of the session name specifies the window you want to send the keys to. This tutorial doesn't use tmux windows, but they're pretty simple: you can have multiple windows in one tmux session, switching between them. \"<command>\" ENTER has the actual keys you want sent to the tmux session. A single-line command is stored in the quotation marks, and by sending the key ENTER at the end you'll cause the session to actually run the command. You should be able to repeat this syntax several times to send multiple commands, or you can run the entire tmux send-keys command several times with a different command contained each time. Here's an example of this: tmux send-keys -t minecraft-server.0 \"sh run_server.sh\" ENTER This sends the command \"sh run_server.sh\" ENTER to the tmux session minecraft-server . This will run the shell file run_server.sh , which probably starts the Minecraft server.","title":"Sending keys"},{"location":"tutorials/en_us/REMOTE_SERVER_MANAGEMENT/#shortcuts","text":"Since tmux commands can get sort of long, I like to use Linux aliases to shorten them. These can be set up by editing the .bashrc file in your user's root directory. In the .bashrc file, add this line to the end: alias tmuxx=\"tmux attach-session -t $1\" . Save it and close it. Now, you can run the command tmuxx <session name> , and it will run the longer tmux attach-session command under the hood, attaching your session. The $1 refers to the first argument after the tmuxx command.","title":"Shortcuts"},{"location":"tutorials/en_us/REMOTE_SERVER_MANAGEMENT/#file-management-filezilla","text":"You're going to need to be able to access the files on your Minecraft server's machine. This can be done through SFTP (Secure File Transfer Protocol) . The best way to use SFTP is with an SFTP client such as FileZilla . You can see a picture of the FileZilla UI below:","title":"File Management (FileZilla)"},{"location":"tutorials/en_us/REMOTE_SERVER_MANAGEMENT/#connecting","text":"After you've opened FileZilla, use the keyboard shortcut Ctrl + S to open the \"Site Manager\" menu, seen below: Here, you can specify the IP address and your credentials, very similar to SSH. After you've set it all up, click \"Connect\" to connect to the server using SFTP. You'll use Ctrl + S and \"Connect\" to connect to the server using SFTP from now on.","title":"Connecting"},{"location":"tutorials/en_us/REMOTE_SERVER_MANAGEMENT/#navigation","text":"Now, you'll be able to view two locations: Files in a local directory on your computer Files in a remote directory on the remote server You can navigate through each by entering a direct location in the text boxes above the directory viewers or by double-clicking on a directory (double-click .. to go up one directory).","title":"Navigation"},{"location":"tutorials/en_us/REMOTE_SERVER_MANAGEMENT/#transferring-files","text":"There are several methods for transferring files using FileZilla: Select and drag files from one side to the other to transfer all of the selected files. Double-click a file to transfer that single file. Note this behavior on a double-click; double-clicking doesn't run a file or open it in an editor.","title":"Transferring Files"},{"location":"tutorials/en_us/REMOTE_SERVER_MANAGEMENT/#editing-files","text":"You can edit a file by right-clicking and selecting \"View/Edit\". To set a default file editor, open the settings (\"Edit\" \u2192 \"Settings\" in the top-left) and set it up using your favorite text editor like I have below: Once you've finished editing the file, save it in your editor, and go back to FileZilla. You should be greeted with this prompt: By selecting \"Yes\", the edited file will be transferred to the remote server, overwriting the existing file with your changes. If \"Finished editing and delete local file\" isn't checked, you can continute to edit/save/revert changes on the local file in your editor. If you never check that box, when you close FileZilla it'll warn you that you still have a file locally: If you've finished everything you want to do, you can safely close FileZilla and the SFTP connection will be closed.","title":"Editing Files"},{"location":"tutorials/en_us/REMOTE_SERVER_MANAGEMENT/#conclusion","text":"Hopefully, these three tools (PuTTY, tmux, FileZilla) will give you what you need to remotely manage a Minecraft server. Start small, and soon you'll have your host machine set up just the way you want. Good luck!","title":"Conclusion"},{"location":"tutorials/en_us/JARS/ADVANCED/","text":"Advanced JAR picking \u00b6 If you want to go a little more in-depth with JAR picking, you've come to the right place. Server Software \u00b6 Server software is the software that allows multiple players to play on a server together. Note \u00b6 A * means that the developer of that project mass produces them. This leads to a lack of support, lack of updates, and quick abandonement. Plugins: \u00b6 CraftBukkit - It's the BASE for all forks that are out today and they still are updating it to this day, not newbie friendly at all because it requires manual building (or you can get it here ). The only real use is for Minecraft versions from 1.0.0 to 1.4.5 as there is no Spigot release for these versions. Version: 1.0.0 - 1.16.5 Currently Active SpigotMC - The original fork of Bukkit. Spigot has improved performance vs CraftBukkit, still widely used. It's a recommended alternative if for some reason you don't want to use PaperMC. Version: 1.4.6 - 1.16.5 Currently Active PaperMC - Most popular JAR for Spigot/Bukkit, quite fast and stable, they roll out small patches frequently, so it is a good choice if you're just starting with your MC server and don't have much experience. Version: 1.7.10 - 1.16.5 Currently Active Tuinity - PaperMC fork aimed at improving stability and performance at high player counts. Version: 1.13.2 - 1.16.5 Currently Active Purpur - It's a fork of PaperMC with Tuinity and Airplane patches to deliver very fast performance with stability for high player counts and it adds a lot of custom features that aren't seen on any other forks. Version: 1.14.4 - 1.16.5 Currently Active Airplane - This fork includes optimizations oriented towards large servers. Version: ??? - 1.16.5 Currently Active Purplane - A fork of purpur that adds features from Airplane . Purpur added Airplane patches and is now discontinued. Version: 1.16.5 DISCONTINUED SpongeVanilla - A server implementing the Sponge API, a different plugin API separate from the Bukkit API. This implementation also includes some general improvements regarding performance and server settings. Version: 1.8 - 1.12.2 Currently Active FoxSpigot * - FoxSpigot is a fork of Spigot aiming to make PvP servers perform better. Version: 1.8.8 Currently Active Yatopia - Aims to combine the code from many Paper forks and optimization mods, as well as many unique optimizations, but it's known to be very unstable and usually, Purpur is a better choice. Only use if you desperately need performance and think it's worth the instability. Version: 1.15.2 - 1.16.5 Currently Active Cuberite - Cuberite is a server software developed in C++ and plugins are written in LUA. Cuberite is very lightweight and they also allow you to run a server on your android device! Cuberite is only 1.8-1.12, 1.13+ compatibility is being worked on. Version: 1.8 - 1.12.2 Currently Active Glowstone - Glowstone is a lightweight, from scratch, open-source Minecraft server written in Java that supports plugins written for the Bukkit API and its major forks, Spigot and Paper. Version: ??? Currently Active TacoSpigot - A even-higher higher performance PaperSpigot fork that adds new features. Version: 1.8 - 1.10, 1.12 Currently Active SharpMC - A 1.8 server made from scratch in C#. Version: 1.8.x DISCONTINUED SharperMC - SharperMC is a C# 1.8.x Minecraft server running on the .NET Framework. SharperMC is a fork of SharpMC which was last updated in 2015. Version: 1.8.x Currently Active MineStom - MineStorm is an entire recode of Minecraft servers from the base up meant to remove all vanilla features. It removes features like the server understanding what a chest is, which allows HUGE performance increases for minigame servers as they may not need that feature. Every feature can be added back. Due to this, development would take longer and would not be suitable for survival servers. Version: ??? Currently Active Akarin - A Spigot plugin compatible project aiming at becoming fairly multicore compatible. This is a fork of Tuinity aiming to simplify the logic and implement multi-threaded computing and make servers more safe and stable. Version: 1.13.2 - 1.16.5 Currently Active AtomSpigot - A 1.8.8 TacoSpigot fork with crash fixes, async hit detection, and async knockback built it. Currently not available through legal means due to a false ban off of MCMarket. Version: 1.8.8 DISCONTINUED DytanicSpigot - Other than its API it has been lost to time, but it was a Spigot fork said to be capable of stability hitting 40 TPS, although there's not much left of it to show if it was. Version: ??? DISCONTINUED xSpigot - A 1.7.10 - 1.8.x TacoSpigot fork with custom knockback editing and options such as toggleable mob AI. This is meant for HCF servers and practice PvP servers. Version: 1.7.10 - 1.8.x DISCONTINUED ySpigot - ySpigot is a remake of xSpigot for later versions of Minecraft. Version: 1.7.10 - 1.12.x DISCONTINUED zSpigot - A 1.7.10 Paper fork with huge optimizations, completely custom knockback editing, built-in server benchmarking, and more PvP based features. Ironically, despite it originally being a premium resource the only way to get it now is through a leaks website due to the creator leaking resources. Version: 1.7.10 DISCONTINUED mSpigot * - Another premium TacoSpigot fork with promises of improved TNT and knockback aimed at PvP and Factions servers. Version: 1.8.8 Currently Active ImanitySpigot - ImanitySpigot provides you with a better PvP experience with smooth hit detection, customizable knockback and projectile enhancements. Version: 1.8.8 Currently Active EmpireCraft - EmpireCraft is a fork of Spigot used by the Empire Minecraft Server . It contains many gameplay changes to suit the EmpireCraft server, but more importantly, contains new performance improvements pending testing to be contributed to Spigot / Paper / Sponge. Version: 1.9 - 1.13.2, 1.15.2 - 1.16.2 Currently Active Origami - Custom paper fork used by Minebench.de . The fork is based on the framework used in Spottedleaf's Tuinity . Version: 1.14.4 - 1.16.5 Currently Active HOSE - MInecraft server with multi-thread computing. Version: 1.11.2 DISCONTINUED Cleanstone - A multi-core design server jar coded from the ground up. Version: 1.12.2 - 1.14 Currently Active McEx - McEx is a Minecraft server written in Elixir and Rust. All the networking and logic is implemented in Elixir, while the low-level chunk data handling is done in Rust. Version: ??? DISCONTINUED Lightstone - The official server software has some shortcomings such as the use of threaded, synchronous I/O along with high CPU and RAM usage. Lightstone aims to be a lightweight and high-performance alternative. Version: ??? DISCONTINUED PerfectSpigot - A 1.8.8 Paper fork focused on Factions servers with optimized cannoning and built-in world generators. Version: 1.8.8 Currently Active BeerSpigot - A 1.8.8 TacoSpigot fork focused on Factions servers with a built-in knockback editing, with a lot of built-in Factions features (Grace Period, Cannoning Optimization, and Setting Global Spawner Values). Version: 1.8.8 Currently Active BreadSpigot - A 1.8.8 TacoSpigot fork focused on SkyBlock servers with huge entity optimizations, built-in mob stacking, and a built-in knockback editor. Version: 1.8.8 Currently Active ElapsedSpigot - A 1.8.8 TacoSpigot fork focused on Factions servers with a built-in mob stacker, configurable block durabilities, huge factions based optimizations, and some vanilla feature toggles. Version: 1.8.8 Currently Active StellarSpigot - A 1.8.8 TacoSpigot fork with a huge assortment of features and optimizations aimed at Factions servers. Version: 1.8.8 Currently Active TorchSpigot - The now abandoned predecessor to Akarin based on a goal of getting Paper to run on multiple threads. Version: ??? DISCONTINUED APOLLO16 - A 1.16.5 Purpur fork with a built-in system monitor and optimized block and chunk ticking methods. Version: 1.16.5 Currently Active LightSpigot 1.8.8 - A free 1.8.8 Spigot fork focused on adding some optimizations and features for HCF servers, like enderpearls teleporting through slabs. Version: 1.8.8 Currently Active LightSpigot 1.16.5 - A 1.16.5 Spigot fork with some spawner / general performance optimizations and custom knockback editing. Version: 1.16.5 Currently Active VoltaneSpigot - A 1.8.8 based TacoSpigot fork with built-in 1.7 - 1.16 client support with multi-thread support, custom knockback editing, discord server integration, and a lot of factions based features. Version: 1.8.8 DISCONTINUED SSSpigot - A 1.16.5 Paper fork with multi-thread support, useless code removal, some general optimizations, and tracking metrics disabled. Version: 1.16.5 Currently Active RocketMC - A 1.15.2 Tuinity fork with a built-in monitoring system, plugin manager (enabling, disabling, command info), and general performance optimizations. Version: 1.15.2 DISCONTINUED aSpigot * - aSpigot is a premium 1.7.10 Paper fork with custom knockback editing, togglable features like mob AI, and various features pointed at HCF servers. Version: 1.7.10 Currently Active BeeSpigot * - BeeSpigot is a premium 1.15.2 Paper fork with custom knockback editing, togglable features like mob AI, and some general optimizations. Version: 1.15.2 Currently Active CoronaSpigot * - CoronaSpigot is a premium 1.8.8 Paper fork with custom knockback editing and some general optimizations. Version: 1.8.8 Currently Active Fish - Fish is a 1.16.5 Purpur fork with features that are too niche to be added to Purpur and changes that may eventually be upstreamed to Purpur or its subsequent upstreams. Version: 1.16.5 Currently Active GuardSpigot - GuardSpigot is a 1.8.8 $99 premium TacoSpigot fork with features like custom knockback editing, lag machine detection, and a bunch of features you can toggle like mob AI for performance gain/gameplay change. Version: 1.8.8 Currently Active NachoSpigot - NachoSpigot is a 1.8.8 TacoSpigot fork aimed at bringing modern patches and optimizations to 1.8. Version: 1.8.8 DISCONTINUED Rainforest - RainForest is a 1.16.1 - 1.16.5 Paper fork with optimizations that they're testing out/optimizations that they plan to keep to themselves. Version: 1.16.1 - 1.16.5 Currently Active SportBukkit - SportBukkit is a fork of CraftBukkit improving stability and adding some new features. It was developed for and by the StratusNetwork server. Version: 1.8 - 1.12.2 DISCONTINUED SportPaper - SportPaper is a 1.8.8 fork of Paper improving performance even more. It is developed for and by the StratusNetwork server. Version: 1.8 DISCONTINUED SternalSpigot * - SternalSpigot is a premium 1.8.8 TacoSpigot fork that tries to move a lot of processes to an async system, has some general optimizations, and has some knockback profiles to switch between for different results. Version: 1.8.8 Currently Active wSpigot * - wSpigot is a 1.7.10 Paper fork with custom knockback profiles, built-in 1.8 client support, and a lot of HCF based features/optimizations. Version: 1.7.10 Currently Active CanaryMod - A fork of hMod for implementing some of Bukkit's patches. Used on the MinecraftOnline server. Version: ??? DISCONTINUED Cauldron-js - Cauldron-js is just a proof of concept idea of running a 1.13.2 server entirely inside your web browser. Doesn't run great, but still an achievement. Version: 1.13.2 DISCONTINUED Feather - Feather is a recode of Minecraft servers entirely in the Rust programming language, aimed at making the server run multicore - this would significantly increase performance. It currently only supports 1.16.5. Worth noting, their plugin API is not finished yet either. Version: 1.16.5 Currently Active hMod - The first server type with server-side mods (plugins) supported. It supported early Alpha versions. Version: ??? DISCONTINUED NeptuneVanilla - A continuation of CanaryMod under a new repository and name. Version: 1.8.9 - 1.9 DISCONTINUED Project-Rainbow - Project-Rainbow was an attempt at overthrowing Bukkit with a new platform, but as we can tell that didn't work. Version: 1.13.2 DISCONTINUED PaperBin - PaperBin is a fork of paper, it patches dupes, bugs and more. It aims to continue 1.12.2 paper and provide support. You can even use it on top of custom paper forks because it uses JVMTI to modify Minecraft classes at runtime. Version: 1.12.2 Currently Active Modded Server JARS \u00b6 Forge - Forge is server software based on the MCP. Both the server and client need to be running the same mods. Version: 1.1 - 1.16.5 Currently Active Fabric - Fabric, unlike Forge, is not based on the MCP. This allows it to be updated for snapshots easier. It is incompatible with Forge. Version: 1.14 - 21w06a (1.17 Snapshot) Currently Active ModLoaderMP - ModLoaderMP was the first multiplayer mod loader, supporting from Beta 1.4 to release 1.5.2. Version: Beta 1.4 - 1.5.2 Plugins and Mods \u00b6 Magma - Minecraft Forge hybrid server implementing the Spigot/Bukkit API (Cauldron for 1.12). Version: 1.12.2 Currently Active Mohist - Minecraft Forge hybrid server implementing the Paper/Spigot/Bukkit API(1.12.2/1.16). Formerly known as Thermos/Kettle/Cauldron/MCPC+. Version: 1.7.10, 1.12.2, 1.16.5 Currently Active Arclight - A Minecraft Bukkit(1.15/1.16) server implementation on Forge using Mixin. Version: 1.14 - 1.16 Currently Active SpongeForge - SpongeForge allows both SpongeVanila plugins as well as Forge mods on one server. Version: 1.10.2 - 1.12.2 Currently Active Cardboard - Cardboard (formerly Bukkit4Fabric) is a Fabric mod that adds support for the popular Bukkit/Spigot modding API. This mod lets you use plugins that are made for Bukkit and it's derivatives (Spigot and Paper) with Fabric. It's not server software but allows Fabric servers to run Bukkit plugins. Version: 1.16.4 - 1.16.5 Currently Active AtomMC - Atom is a Minecraft Server Software that is based on Minecraft Forge and CraftBukkit for 1.12.2 version of Minecraft. Version: 1.12.2 Currently Active Hotpur - HotPur is a 1.16.5 fork of Purpur attempting to add Fabric mod support. Version: 1.16.4 Currently Active MCPC+ - MCPC+ was a 1.2.5 to 1.7.10 Bukkit/Forge hybrid, the first of its kind. It was also known as Cauldron. KCauldron - KCauldron is a fork of MCPC+ using Spigot instead of CraftBukkit. Version: 1.7.10 DISCONTINUED Thermos - A Fork of KCauldron with many bug fixes and performance improvements. Version: 1.7.10 DISCONTINUED Contigo - A fork of Thermos that was opened after Thermos was discontinued and allowed the community to add patches and bug fixes. Version: ??? DISCONTINUED Uranium - A fork of KCauldron that added new features and bug fixes and is a very popular server choice in China. Version: ??? DISCONTINUED CatServer - A Server designed for Forge and Paper support not based on any other preexisting software. Version: 1.12.2 Currently Active Kettle - A fork of Contigo that was updated to 1.12.2 and later 1.14.4 which adds support Paper and Forge Support. Version: 1.12.2 - 1.14.4 Currently Active TableCloth - A Hybrid jar forked from AtomMC combining Forge + Spigot and a couple of Paper Patches. Version: ??? DISCONTINUED Lava - Lava is a 1.12.2 Forge/Spigot hybrid server not forked from any other hybrid servers. Version: 1.12.2 DISCONTINUED NeptuneForge - A hybrid of Forge/NeptureVanilla. NeptuneVanilla being the fork of CanaryMod. Version: ??? DISCONTINUED PFServer - PFServer is a 1.12.2 fork of AtomMC and CatServer to create a better Forge/Bukkit hybrid. Version: ??? DISCONTINUED Network Software \u00b6 BungeeCord - Base for the Waterfall fork, these JARs are used for configuring networks of which an example is Hypixel or Mineplex, it is used for distributing workload and players to different lobbies (Different server instances run with separate files and data). No, this can't be used as a normal JAR and requires at least 3 servers/instances, one is BungeeCord (or it's fork) which is called the proxy, players connect to this proxy and are sent to the default server which is set in config. Let's say server \"Lobby\" is the default, it will send you there, then you can connect to another server, for example, \"Survival\" which is running in a separate server/instance and BungeeCord enables the functionality travel across these different servers without returning to the multiplayer menu screen. (It can be done with special plugins which utilize BungeeCord API to send you to the chosen server on click, you'll most commonly see it as a compass or portal). Version: 1.8 - 1.16.5 Currently Active Waterfall - Fork of BungeeCord, faster than BungeeCord and has general improvements and tweaks which make it the more preferred network JAR, works the same as BungeeCord (talking about the use, it doesn't have a different system). Version: 1.8 - 1.16.5 Currently Active Velocity - A next-generation Minecraft proxy focused on scalability and flexibility. It allows server owners to link together multiple Minecraft servers so they may appear as one. Version: 1.7.2 - 1.16.5 Currently Active Travertine - Fork of Waterfall with added 1.7.10 support if you want that old school experience. Version: 1.7 - 1.16.5 Currently Active FlameCord - FlameCord is a patch for Travertine to fix possible exploits and add useful functionalities. Version: 1.7 - 1.16.5 Currently Active HexaCord - A fork of BungeeCord that added forge support before Waterfall did. Version: 1.7 - 1.11 DISCONTINUED LilyPad - A separate Proxy with its API and Plugins that has been suggestively discontinued. Version: ??? Currently Active Aegis - A fork of BungeeCord adding many security measures and with built-in anti-bot and anti-VPN. It supports 1.7.x to 1.16.3. The developer is currently falsely banned from MC-Market. Version: 1.7 - 1.16.4 DISCONTINUED Gate - A Minecraft Proxy that is written in Go suggesting \"scalability, flexibility & excellent server version support\". Version: ??? Currently Active XCord - A 1.7-1.16.x BungeeCord fork with built in anti-bot, anti-exploit, and many performance optimizations. Version: 1.7.10 - 1.16.5 Currently Active BarelyAuthenticated - A fork of BungeeCord which caches players IPs and usernames to verify them while Mojang services are unstable. It is created and maintained for the server BlockParty. Version: 1.8 - 1.16 Currently Active DarkCord - A fork of HexaCord/BungeeCord used and made by the Oculate Network. Version: 1.7.x - 1.11.x DISCONTINUED DasBungee - DasBungee is a premium BungeeCord fork that adds an IP blacklist system and patches \"all known exploits\". Version: 1.8 - 1.16.5 Currently Active Flexagon - Flexagon is a fork of Hexacord and Travertine meant just for testing purposes. Version: 1.7 - 1.15.2 DISCONTINUED Glymur - Glymur is a fork of Travertine adding in some bug fixes and Stratus APIs. It is developed by the StratusNetwork server. Version: 1.7 - 1.14 DISCONTINUED GoLilyPad - A rewrite of Lilypad in the programming language Go. Version: ??? Currently Active Gravity - Gravity is a premium BungeeCord fork adding features like antibot, global messaging, and patches for almost all of the issues. Version: ??? Currently Active GuardHexa - GuardHexa is a premium fork of HexaCord that patches a lot of bugs/exploits and has a bit of optimization. Version: 1.7 - 1.16.4 Currently Active HQBungeeCord - HQBungeeCord is a Waterfall fork aimed at improving stability and performance. Version: ??? DISCONTINUED InsaneProxy - InsaneProxy is a premium fork of Travertine and Velocity, resulting in lower CPU usage and more exploits patched. Version: 1.7 - 1.16.5 Currently Active Miners-League-BungeeCord - MLBC is a fork of BungeeCord created by and used by the Miners League Minigames Network for any custom patches/features they may need. Version: ??? - 1.13 DISCONTINUED NachoBungee - NachoBungee is by the guys from NachoSpigot, which is a bad sign. On the GitHub page, they list off features of what they forked, nothing new. Version: 1.7 - 1.16 Currently Active SecureCord - SecureCord is a free BungeeCord fork which patches from harmful exploits. Version: ??? DISCONTINUED SSCord - SSCord is a premium fork of Waterfall adding some optimizations, anti-bot features like captcha, and patches some waterfall exploits. Version: 1.7.2 - 1.16.5 Currently Active VanillaCord - VanillaCord is a BungeeCord fork allowing Vanilla servers to connect through BungeeCord. Version: 1.12 - 1.16.5 Currently Active WaterCrash - WaterCrash is a premium WaterFall fork adding 1.7.x support, adds real-time IP blacklisting, and a crash/exploit preventer. Currently, the resource purchase page is deleted for unknown reasons. Version: 1.7 - 1.15 DISCONTINUED wCord - A fork of BungeeCord with animated MOTDs. Version: 1.4.7 - 1.6.4 DISCONTINUED zBungeeCord - zBungeeCord is a premium BungeeCord fork optimizing BungeeCord quite a bit and cleaning up the commands. Version: 1.7 - 1.8 DISCONTINUED","title":"Advanced JAR picking"},{"location":"tutorials/en_us/JARS/ADVANCED/#advanced-jar-picking","text":"If you want to go a little more in-depth with JAR picking, you've come to the right place.","title":"Advanced JAR picking"},{"location":"tutorials/en_us/JARS/ADVANCED/#server-software","text":"Server software is the software that allows multiple players to play on a server together.","title":"Server Software"},{"location":"tutorials/en_us/JARS/ADVANCED/#note","text":"A * means that the developer of that project mass produces them. This leads to a lack of support, lack of updates, and quick abandonement.","title":"Note"},{"location":"tutorials/en_us/JARS/ADVANCED/#plugins","text":"CraftBukkit - It's the BASE for all forks that are out today and they still are updating it to this day, not newbie friendly at all because it requires manual building (or you can get it here ). The only real use is for Minecraft versions from 1.0.0 to 1.4.5 as there is no Spigot release for these versions. Version: 1.0.0 - 1.16.5 Currently Active SpigotMC - The original fork of Bukkit. Spigot has improved performance vs CraftBukkit, still widely used. It's a recommended alternative if for some reason you don't want to use PaperMC. Version: 1.4.6 - 1.16.5 Currently Active PaperMC - Most popular JAR for Spigot/Bukkit, quite fast and stable, they roll out small patches frequently, so it is a good choice if you're just starting with your MC server and don't have much experience. Version: 1.7.10 - 1.16.5 Currently Active Tuinity - PaperMC fork aimed at improving stability and performance at high player counts. Version: 1.13.2 - 1.16.5 Currently Active Purpur - It's a fork of PaperMC with Tuinity and Airplane patches to deliver very fast performance with stability for high player counts and it adds a lot of custom features that aren't seen on any other forks. Version: 1.14.4 - 1.16.5 Currently Active Airplane - This fork includes optimizations oriented towards large servers. Version: ??? - 1.16.5 Currently Active Purplane - A fork of purpur that adds features from Airplane . Purpur added Airplane patches and is now discontinued. Version: 1.16.5 DISCONTINUED SpongeVanilla - A server implementing the Sponge API, a different plugin API separate from the Bukkit API. This implementation also includes some general improvements regarding performance and server settings. Version: 1.8 - 1.12.2 Currently Active FoxSpigot * - FoxSpigot is a fork of Spigot aiming to make PvP servers perform better. Version: 1.8.8 Currently Active Yatopia - Aims to combine the code from many Paper forks and optimization mods, as well as many unique optimizations, but it's known to be very unstable and usually, Purpur is a better choice. Only use if you desperately need performance and think it's worth the instability. Version: 1.15.2 - 1.16.5 Currently Active Cuberite - Cuberite is a server software developed in C++ and plugins are written in LUA. Cuberite is very lightweight and they also allow you to run a server on your android device! Cuberite is only 1.8-1.12, 1.13+ compatibility is being worked on. Version: 1.8 - 1.12.2 Currently Active Glowstone - Glowstone is a lightweight, from scratch, open-source Minecraft server written in Java that supports plugins written for the Bukkit API and its major forks, Spigot and Paper. Version: ??? Currently Active TacoSpigot - A even-higher higher performance PaperSpigot fork that adds new features. Version: 1.8 - 1.10, 1.12 Currently Active SharpMC - A 1.8 server made from scratch in C#. Version: 1.8.x DISCONTINUED SharperMC - SharperMC is a C# 1.8.x Minecraft server running on the .NET Framework. SharperMC is a fork of SharpMC which was last updated in 2015. Version: 1.8.x Currently Active MineStom - MineStorm is an entire recode of Minecraft servers from the base up meant to remove all vanilla features. It removes features like the server understanding what a chest is, which allows HUGE performance increases for minigame servers as they may not need that feature. Every feature can be added back. Due to this, development would take longer and would not be suitable for survival servers. Version: ??? Currently Active Akarin - A Spigot plugin compatible project aiming at becoming fairly multicore compatible. This is a fork of Tuinity aiming to simplify the logic and implement multi-threaded computing and make servers more safe and stable. Version: 1.13.2 - 1.16.5 Currently Active AtomSpigot - A 1.8.8 TacoSpigot fork with crash fixes, async hit detection, and async knockback built it. Currently not available through legal means due to a false ban off of MCMarket. Version: 1.8.8 DISCONTINUED DytanicSpigot - Other than its API it has been lost to time, but it was a Spigot fork said to be capable of stability hitting 40 TPS, although there's not much left of it to show if it was. Version: ??? DISCONTINUED xSpigot - A 1.7.10 - 1.8.x TacoSpigot fork with custom knockback editing and options such as toggleable mob AI. This is meant for HCF servers and practice PvP servers. Version: 1.7.10 - 1.8.x DISCONTINUED ySpigot - ySpigot is a remake of xSpigot for later versions of Minecraft. Version: 1.7.10 - 1.12.x DISCONTINUED zSpigot - A 1.7.10 Paper fork with huge optimizations, completely custom knockback editing, built-in server benchmarking, and more PvP based features. Ironically, despite it originally being a premium resource the only way to get it now is through a leaks website due to the creator leaking resources. Version: 1.7.10 DISCONTINUED mSpigot * - Another premium TacoSpigot fork with promises of improved TNT and knockback aimed at PvP and Factions servers. Version: 1.8.8 Currently Active ImanitySpigot - ImanitySpigot provides you with a better PvP experience with smooth hit detection, customizable knockback and projectile enhancements. Version: 1.8.8 Currently Active EmpireCraft - EmpireCraft is a fork of Spigot used by the Empire Minecraft Server . It contains many gameplay changes to suit the EmpireCraft server, but more importantly, contains new performance improvements pending testing to be contributed to Spigot / Paper / Sponge. Version: 1.9 - 1.13.2, 1.15.2 - 1.16.2 Currently Active Origami - Custom paper fork used by Minebench.de . The fork is based on the framework used in Spottedleaf's Tuinity . Version: 1.14.4 - 1.16.5 Currently Active HOSE - MInecraft server with multi-thread computing. Version: 1.11.2 DISCONTINUED Cleanstone - A multi-core design server jar coded from the ground up. Version: 1.12.2 - 1.14 Currently Active McEx - McEx is a Minecraft server written in Elixir and Rust. All the networking and logic is implemented in Elixir, while the low-level chunk data handling is done in Rust. Version: ??? DISCONTINUED Lightstone - The official server software has some shortcomings such as the use of threaded, synchronous I/O along with high CPU and RAM usage. Lightstone aims to be a lightweight and high-performance alternative. Version: ??? DISCONTINUED PerfectSpigot - A 1.8.8 Paper fork focused on Factions servers with optimized cannoning and built-in world generators. Version: 1.8.8 Currently Active BeerSpigot - A 1.8.8 TacoSpigot fork focused on Factions servers with a built-in knockback editing, with a lot of built-in Factions features (Grace Period, Cannoning Optimization, and Setting Global Spawner Values). Version: 1.8.8 Currently Active BreadSpigot - A 1.8.8 TacoSpigot fork focused on SkyBlock servers with huge entity optimizations, built-in mob stacking, and a built-in knockback editor. Version: 1.8.8 Currently Active ElapsedSpigot - A 1.8.8 TacoSpigot fork focused on Factions servers with a built-in mob stacker, configurable block durabilities, huge factions based optimizations, and some vanilla feature toggles. Version: 1.8.8 Currently Active StellarSpigot - A 1.8.8 TacoSpigot fork with a huge assortment of features and optimizations aimed at Factions servers. Version: 1.8.8 Currently Active TorchSpigot - The now abandoned predecessor to Akarin based on a goal of getting Paper to run on multiple threads. Version: ??? DISCONTINUED APOLLO16 - A 1.16.5 Purpur fork with a built-in system monitor and optimized block and chunk ticking methods. Version: 1.16.5 Currently Active LightSpigot 1.8.8 - A free 1.8.8 Spigot fork focused on adding some optimizations and features for HCF servers, like enderpearls teleporting through slabs. Version: 1.8.8 Currently Active LightSpigot 1.16.5 - A 1.16.5 Spigot fork with some spawner / general performance optimizations and custom knockback editing. Version: 1.16.5 Currently Active VoltaneSpigot - A 1.8.8 based TacoSpigot fork with built-in 1.7 - 1.16 client support with multi-thread support, custom knockback editing, discord server integration, and a lot of factions based features. Version: 1.8.8 DISCONTINUED SSSpigot - A 1.16.5 Paper fork with multi-thread support, useless code removal, some general optimizations, and tracking metrics disabled. Version: 1.16.5 Currently Active RocketMC - A 1.15.2 Tuinity fork with a built-in monitoring system, plugin manager (enabling, disabling, command info), and general performance optimizations. Version: 1.15.2 DISCONTINUED aSpigot * - aSpigot is a premium 1.7.10 Paper fork with custom knockback editing, togglable features like mob AI, and various features pointed at HCF servers. Version: 1.7.10 Currently Active BeeSpigot * - BeeSpigot is a premium 1.15.2 Paper fork with custom knockback editing, togglable features like mob AI, and some general optimizations. Version: 1.15.2 Currently Active CoronaSpigot * - CoronaSpigot is a premium 1.8.8 Paper fork with custom knockback editing and some general optimizations. Version: 1.8.8 Currently Active Fish - Fish is a 1.16.5 Purpur fork with features that are too niche to be added to Purpur and changes that may eventually be upstreamed to Purpur or its subsequent upstreams. Version: 1.16.5 Currently Active GuardSpigot - GuardSpigot is a 1.8.8 $99 premium TacoSpigot fork with features like custom knockback editing, lag machine detection, and a bunch of features you can toggle like mob AI for performance gain/gameplay change. Version: 1.8.8 Currently Active NachoSpigot - NachoSpigot is a 1.8.8 TacoSpigot fork aimed at bringing modern patches and optimizations to 1.8. Version: 1.8.8 DISCONTINUED Rainforest - RainForest is a 1.16.1 - 1.16.5 Paper fork with optimizations that they're testing out/optimizations that they plan to keep to themselves. Version: 1.16.1 - 1.16.5 Currently Active SportBukkit - SportBukkit is a fork of CraftBukkit improving stability and adding some new features. It was developed for and by the StratusNetwork server. Version: 1.8 - 1.12.2 DISCONTINUED SportPaper - SportPaper is a 1.8.8 fork of Paper improving performance even more. It is developed for and by the StratusNetwork server. Version: 1.8 DISCONTINUED SternalSpigot * - SternalSpigot is a premium 1.8.8 TacoSpigot fork that tries to move a lot of processes to an async system, has some general optimizations, and has some knockback profiles to switch between for different results. Version: 1.8.8 Currently Active wSpigot * - wSpigot is a 1.7.10 Paper fork with custom knockback profiles, built-in 1.8 client support, and a lot of HCF based features/optimizations. Version: 1.7.10 Currently Active CanaryMod - A fork of hMod for implementing some of Bukkit's patches. Used on the MinecraftOnline server. Version: ??? DISCONTINUED Cauldron-js - Cauldron-js is just a proof of concept idea of running a 1.13.2 server entirely inside your web browser. Doesn't run great, but still an achievement. Version: 1.13.2 DISCONTINUED Feather - Feather is a recode of Minecraft servers entirely in the Rust programming language, aimed at making the server run multicore - this would significantly increase performance. It currently only supports 1.16.5. Worth noting, their plugin API is not finished yet either. Version: 1.16.5 Currently Active hMod - The first server type with server-side mods (plugins) supported. It supported early Alpha versions. Version: ??? DISCONTINUED NeptuneVanilla - A continuation of CanaryMod under a new repository and name. Version: 1.8.9 - 1.9 DISCONTINUED Project-Rainbow - Project-Rainbow was an attempt at overthrowing Bukkit with a new platform, but as we can tell that didn't work. Version: 1.13.2 DISCONTINUED PaperBin - PaperBin is a fork of paper, it patches dupes, bugs and more. It aims to continue 1.12.2 paper and provide support. You can even use it on top of custom paper forks because it uses JVMTI to modify Minecraft classes at runtime. Version: 1.12.2 Currently Active","title":"Plugins:"},{"location":"tutorials/en_us/JARS/ADVANCED/#modded-server-jars","text":"Forge - Forge is server software based on the MCP. Both the server and client need to be running the same mods. Version: 1.1 - 1.16.5 Currently Active Fabric - Fabric, unlike Forge, is not based on the MCP. This allows it to be updated for snapshots easier. It is incompatible with Forge. Version: 1.14 - 21w06a (1.17 Snapshot) Currently Active ModLoaderMP - ModLoaderMP was the first multiplayer mod loader, supporting from Beta 1.4 to release 1.5.2. Version: Beta 1.4 - 1.5.2","title":"Modded Server JARS"},{"location":"tutorials/en_us/JARS/ADVANCED/#plugins-and-mods","text":"Magma - Minecraft Forge hybrid server implementing the Spigot/Bukkit API (Cauldron for 1.12). Version: 1.12.2 Currently Active Mohist - Minecraft Forge hybrid server implementing the Paper/Spigot/Bukkit API(1.12.2/1.16). Formerly known as Thermos/Kettle/Cauldron/MCPC+. Version: 1.7.10, 1.12.2, 1.16.5 Currently Active Arclight - A Minecraft Bukkit(1.15/1.16) server implementation on Forge using Mixin. Version: 1.14 - 1.16 Currently Active SpongeForge - SpongeForge allows both SpongeVanila plugins as well as Forge mods on one server. Version: 1.10.2 - 1.12.2 Currently Active Cardboard - Cardboard (formerly Bukkit4Fabric) is a Fabric mod that adds support for the popular Bukkit/Spigot modding API. This mod lets you use plugins that are made for Bukkit and it's derivatives (Spigot and Paper) with Fabric. It's not server software but allows Fabric servers to run Bukkit plugins. Version: 1.16.4 - 1.16.5 Currently Active AtomMC - Atom is a Minecraft Server Software that is based on Minecraft Forge and CraftBukkit for 1.12.2 version of Minecraft. Version: 1.12.2 Currently Active Hotpur - HotPur is a 1.16.5 fork of Purpur attempting to add Fabric mod support. Version: 1.16.4 Currently Active MCPC+ - MCPC+ was a 1.2.5 to 1.7.10 Bukkit/Forge hybrid, the first of its kind. It was also known as Cauldron. KCauldron - KCauldron is a fork of MCPC+ using Spigot instead of CraftBukkit. Version: 1.7.10 DISCONTINUED Thermos - A Fork of KCauldron with many bug fixes and performance improvements. Version: 1.7.10 DISCONTINUED Contigo - A fork of Thermos that was opened after Thermos was discontinued and allowed the community to add patches and bug fixes. Version: ??? DISCONTINUED Uranium - A fork of KCauldron that added new features and bug fixes and is a very popular server choice in China. Version: ??? DISCONTINUED CatServer - A Server designed for Forge and Paper support not based on any other preexisting software. Version: 1.12.2 Currently Active Kettle - A fork of Contigo that was updated to 1.12.2 and later 1.14.4 which adds support Paper and Forge Support. Version: 1.12.2 - 1.14.4 Currently Active TableCloth - A Hybrid jar forked from AtomMC combining Forge + Spigot and a couple of Paper Patches. Version: ??? DISCONTINUED Lava - Lava is a 1.12.2 Forge/Spigot hybrid server not forked from any other hybrid servers. Version: 1.12.2 DISCONTINUED NeptuneForge - A hybrid of Forge/NeptureVanilla. NeptuneVanilla being the fork of CanaryMod. Version: ??? DISCONTINUED PFServer - PFServer is a 1.12.2 fork of AtomMC and CatServer to create a better Forge/Bukkit hybrid. Version: ??? DISCONTINUED","title":"Plugins and Mods"},{"location":"tutorials/en_us/JARS/ADVANCED/#network-software","text":"BungeeCord - Base for the Waterfall fork, these JARs are used for configuring networks of which an example is Hypixel or Mineplex, it is used for distributing workload and players to different lobbies (Different server instances run with separate files and data). No, this can't be used as a normal JAR and requires at least 3 servers/instances, one is BungeeCord (or it's fork) which is called the proxy, players connect to this proxy and are sent to the default server which is set in config. Let's say server \"Lobby\" is the default, it will send you there, then you can connect to another server, for example, \"Survival\" which is running in a separate server/instance and BungeeCord enables the functionality travel across these different servers without returning to the multiplayer menu screen. (It can be done with special plugins which utilize BungeeCord API to send you to the chosen server on click, you'll most commonly see it as a compass or portal). Version: 1.8 - 1.16.5 Currently Active Waterfall - Fork of BungeeCord, faster than BungeeCord and has general improvements and tweaks which make it the more preferred network JAR, works the same as BungeeCord (talking about the use, it doesn't have a different system). Version: 1.8 - 1.16.5 Currently Active Velocity - A next-generation Minecraft proxy focused on scalability and flexibility. It allows server owners to link together multiple Minecraft servers so they may appear as one. Version: 1.7.2 - 1.16.5 Currently Active Travertine - Fork of Waterfall with added 1.7.10 support if you want that old school experience. Version: 1.7 - 1.16.5 Currently Active FlameCord - FlameCord is a patch for Travertine to fix possible exploits and add useful functionalities. Version: 1.7 - 1.16.5 Currently Active HexaCord - A fork of BungeeCord that added forge support before Waterfall did. Version: 1.7 - 1.11 DISCONTINUED LilyPad - A separate Proxy with its API and Plugins that has been suggestively discontinued. Version: ??? Currently Active Aegis - A fork of BungeeCord adding many security measures and with built-in anti-bot and anti-VPN. It supports 1.7.x to 1.16.3. The developer is currently falsely banned from MC-Market. Version: 1.7 - 1.16.4 DISCONTINUED Gate - A Minecraft Proxy that is written in Go suggesting \"scalability, flexibility & excellent server version support\". Version: ??? Currently Active XCord - A 1.7-1.16.x BungeeCord fork with built in anti-bot, anti-exploit, and many performance optimizations. Version: 1.7.10 - 1.16.5 Currently Active BarelyAuthenticated - A fork of BungeeCord which caches players IPs and usernames to verify them while Mojang services are unstable. It is created and maintained for the server BlockParty. Version: 1.8 - 1.16 Currently Active DarkCord - A fork of HexaCord/BungeeCord used and made by the Oculate Network. Version: 1.7.x - 1.11.x DISCONTINUED DasBungee - DasBungee is a premium BungeeCord fork that adds an IP blacklist system and patches \"all known exploits\". Version: 1.8 - 1.16.5 Currently Active Flexagon - Flexagon is a fork of Hexacord and Travertine meant just for testing purposes. Version: 1.7 - 1.15.2 DISCONTINUED Glymur - Glymur is a fork of Travertine adding in some bug fixes and Stratus APIs. It is developed by the StratusNetwork server. Version: 1.7 - 1.14 DISCONTINUED GoLilyPad - A rewrite of Lilypad in the programming language Go. Version: ??? Currently Active Gravity - Gravity is a premium BungeeCord fork adding features like antibot, global messaging, and patches for almost all of the issues. Version: ??? Currently Active GuardHexa - GuardHexa is a premium fork of HexaCord that patches a lot of bugs/exploits and has a bit of optimization. Version: 1.7 - 1.16.4 Currently Active HQBungeeCord - HQBungeeCord is a Waterfall fork aimed at improving stability and performance. Version: ??? DISCONTINUED InsaneProxy - InsaneProxy is a premium fork of Travertine and Velocity, resulting in lower CPU usage and more exploits patched. Version: 1.7 - 1.16.5 Currently Active Miners-League-BungeeCord - MLBC is a fork of BungeeCord created by and used by the Miners League Minigames Network for any custom patches/features they may need. Version: ??? - 1.13 DISCONTINUED NachoBungee - NachoBungee is by the guys from NachoSpigot, which is a bad sign. On the GitHub page, they list off features of what they forked, nothing new. Version: 1.7 - 1.16 Currently Active SecureCord - SecureCord is a free BungeeCord fork which patches from harmful exploits. Version: ??? DISCONTINUED SSCord - SSCord is a premium fork of Waterfall adding some optimizations, anti-bot features like captcha, and patches some waterfall exploits. Version: 1.7.2 - 1.16.5 Currently Active VanillaCord - VanillaCord is a BungeeCord fork allowing Vanilla servers to connect through BungeeCord. Version: 1.12 - 1.16.5 Currently Active WaterCrash - WaterCrash is a premium WaterFall fork adding 1.7.x support, adds real-time IP blacklisting, and a crash/exploit preventer. Currently, the resource purchase page is deleted for unknown reasons. Version: 1.7 - 1.15 DISCONTINUED wCord - A fork of BungeeCord with animated MOTDs. Version: 1.4.7 - 1.6.4 DISCONTINUED zBungeeCord - zBungeeCord is a premium BungeeCord fork optimizing BungeeCord quite a bit and cleaning up the commands. Version: 1.7 - 1.8 DISCONTINUED","title":"Network Software"},{"location":"tutorials/en_us/JARS/FINDING/","text":"Intro \u00b6 Here we will go through how to pick what server jar to use. A server jar contains all the code for the server, there are server jars for modloaders, like forge or fabric, and some that allow you to use plugins. Picking your server jar \u00b6 The first step to finding the right server jar for you is to know what kind of server you want to run, is it survival, prisons, minigames and what Minecraft version is it? We will show you some basic ones then you can look at (link to the page of server jars) for more in-depth explanations etc. For MC 1.16.X \u00b6 If you are planning on creating a survival server for your friend group Fabric . Fabric is mostly known for modded servers but you can install basic plugin port mods on server side and optimization mods for making chunks load faster, creating lighting better etc. Theres also mods for essentials port and many more plugins you would need on a regular server... If instead you are planning on running a public server where you plan to have a lot of plugins or custom gamemodes you should go for a spigot fork like PaperMC , or my personal favorite: Purpur . Purpur has all the optimization, fixes, and features of Paper, Tuinity, Spigot and Airplane as well as their own features. We really recommend, it's the best fork for stability and performance. For MC 1.13+ \u00b6 A good server jar to use is Purpur , it optimizes performance a lot and adds a lot of features (FLYING SQUIDS :D) to help optimize even further or just some fun cool things to do. For MC 1.12 and below \u00b6 PaperMC is generally the best fork for these versions and not much more is needed. JUST PLEASE DO NOT USE THE VANILLA JAR! Optimization \u00b6 Follow our guide on how to optimize your server here .","title":"Intro"},{"location":"tutorials/en_us/JARS/FINDING/#intro","text":"Here we will go through how to pick what server jar to use. A server jar contains all the code for the server, there are server jars for modloaders, like forge or fabric, and some that allow you to use plugins.","title":"Intro"},{"location":"tutorials/en_us/JARS/FINDING/#picking-your-server-jar","text":"The first step to finding the right server jar for you is to know what kind of server you want to run, is it survival, prisons, minigames and what Minecraft version is it? We will show you some basic ones then you can look at (link to the page of server jars) for more in-depth explanations etc.","title":"Picking your server jar"},{"location":"tutorials/en_us/JARS/FINDING/#for-mc-116x","text":"If you are planning on creating a survival server for your friend group Fabric . Fabric is mostly known for modded servers but you can install basic plugin port mods on server side and optimization mods for making chunks load faster, creating lighting better etc. Theres also mods for essentials port and many more plugins you would need on a regular server... If instead you are planning on running a public server where you plan to have a lot of plugins or custom gamemodes you should go for a spigot fork like PaperMC , or my personal favorite: Purpur . Purpur has all the optimization, fixes, and features of Paper, Tuinity, Spigot and Airplane as well as their own features. We really recommend, it's the best fork for stability and performance.","title":"For MC 1.16.X"},{"location":"tutorials/en_us/JARS/FINDING/#for-mc-113","text":"A good server jar to use is Purpur , it optimizes performance a lot and adds a lot of features (FLYING SQUIDS :D) to help optimize even further or just some fun cool things to do.","title":"For MC 1.13+"},{"location":"tutorials/en_us/JARS/FINDING/#for-mc-112-and-below","text":"PaperMC is generally the best fork for these versions and not much more is needed. JUST PLEASE DO NOT USE THE VANILLA JAR!","title":"For MC 1.12 and below"},{"location":"tutorials/en_us/JARS/FINDING/#optimization","text":"Follow our guide on how to optimize your server here .","title":"Optimization"},{"location":"tutorials/en_us/JARS/OPTIMIZATION/","text":"Introduction \u00b6 Here you will learn how to optimize you Minecraft server to get better performance. Different kinds of Lag \u00b6 TPS - Server Lag TPS stands for **T**icks **P**er **S**econd. It is also the only lag type a server owner has direct control over. A server processes all tasks at a rate of 20 TPS. Tasks like mob movement, crop growth, and player interactions with blocks need to be ticked by the server to function properly. A TPS below 20 means the server is running behind and must skip tasks in order to keep important tasks on time. Significant TPS loss usually presents itself with minor annoyances like intermittent mob freezing and block break resets. Severe cases could result in server-wide freezes or even crashes. TPS Ratings - 20.0 = Flawless - Well done. - 19.95-19.99 = Great - Unnoticeable TPS loss. Most servers live here. - 18.5-19.94 = Fair - Maybe some annoyances, but nothing game-ruining. - 16.0-18.4 = Poor - You definitely need to fix it if this is your average. - <16.0 = Unplayable... Ping - Connection Lag Ping (aka latency) reflects how long (in milliseconds) data takes to process and travel between the client and server host. The further a client is geographically separated from the server, the longer this transfer might take. Other common influences on ping are congested or slow connections. As a server owner (assuming you have a choice) you should host your server in a region where you prefer to have your player base or one that appeases a broad range of players. Ping Ratings - 1-90 = Great! - 91-179 = Good - Maybe a slight disadvantage in PvP. - 180-299 = Poor - Regular lag while interacting with blocks/players/entities. - 300-499 = Bad - Nearly unplayable. - 500+ = Assuming your bandwidth is solid, it's time to find a server closer to you. FPS - Client Lag Do not confuse TPS with FPS (**F**rames **P**er **S**econd). FPS reflects a client's ability to process and display what the game/server wants to render. FPS is 100% client side and has nothing to do with server performance. The only thing a server can do to help FPS is cut server features so dinosaur PCs can keep up, but even that is unlikely to make a big difference. Instead of reducing server features, recommend a popular client mod called Optifine to players. FPS Ratings Note: These rates assume your standing average in a non-graphic-intense location. 60+ = Perfect - Anything over 60 FPS is overkill for Minecraft. Consider capping FPS below 80 to avoid unnecessary stress on hardware. 40-59 = Great - Should have no issues. 25-39 = Good - Occasional rendering lag. Issues if you enter graphic-intense areas. 15-24 = Poor - Constant rendering glitches. Probably freeze in GI area. 1-10 = Bad - Client should significantly reduce graphic settings. What's lagging? - measuring performance \u00b6 mspt \u00b6 Paper offers a /mspt command that will tell you how much time server took to calculate recent ticks. If the first and second value you see are lower than 50, then congratulations! Your server is not lagging! If the third value is over 50 then it means there was at least 1 tick that took longer. That's completely normal and happens from time to time, so don't panic. timings \u00b6 Great way to see what might be going on when your server is lagging are timings. Timings is a tool that lets you see exactly what tasks are taking the longest. It's the most basic troubleshooting tool and if you ask for help regarding lag you will most likely be asked for your timings. To get timings of your server you just need to execute /timings paste command and click the link you're provided with. You can share this link with other people to let them help you. It's also easy to misread if you don't know what you're doing. There is a detailed video tutorial by Aikar on how to read them. spark \u00b6 Spark is a plugin that allows you to profile your servers CPU and memory usage. You can read on how to use it on its wiki . There's also a guide on how to find the cause of lag spikes here . Optimizing your .jar specific configurations to YOUR NEEDS \u00b6 Every .jar has its own set of configurations that you can tweak to suit your specific needs. You probably wont find as effective the config of a minigames server in a survival server. You should read every config, understand it, and choose if you need to use it or not. This is extremely important in survival servers as some config values can ruin your mob spawning rates or destroy your players custom redstone circuits. Here is a guide made by a well-known member of the community that can help you further in this optimization, it is limited to PaperMC and doesn't have optimized configs for Tuinity, Purpur or any other forks. You can also join this discord , which has an amazing Discord bot that assists you optimizing your server based on your timings report! Remember this is a general suggestion, it may not suit your needs. Aikars Flags / Startup Flags \u00b6 You should also use correct startup flags, the Aikars flags ! Sadly many server hosts won't allow you to edit startup flags by yourselft, but they are likely to do it for you if you open a ticket. World Pre-Generation \u00b6 Another essential step in survival servers is to pre-generate your world, because chunk generation consumes a lot of resources. One of several possible ways is shown below Download and install Fast Chunk Pregenerator Set your desired world limit. Use the command: /fcp start <radius> [world] [chunkX] [chunkZ] Wait for it to finish, it may take a long time and the server will lag while it works. This MUST be done with the server empty / closed to public. For a guide on Fast Chunk Pregenerator go here . \"Too good to be true\" plugins \u00b6 Plugins removing ground items \u00b6 Absolutely unnecessary since they can be replaced with merge radius and alt-item-despawn-rate and frankly, they're less configurable than basic server configs. They tend to use more resources scanning and removing items than not removing the items at all. Mob stacker plugins \u00b6 It's really hard to justify using one. Stacking naturally spawned entities causes more lag than not stacking them at all due to the server constantly trying to spawn more mobs. The only \"acceptable\" use case is for spawners on servers with a large amount of spawners. Plugins enabling/disabling other plugins \u00b6 Anything that enables or disables plugins on runtime is extremely dangerous. Loading a plugin like that can cause fatal errors with tracking data and disabling a plugin can lead to errors due to removing dependency. The /reload command suffers from exact same issues.","title":"Introduction"},{"location":"tutorials/en_us/JARS/OPTIMIZATION/#introduction","text":"Here you will learn how to optimize you Minecraft server to get better performance.","title":"Introduction"},{"location":"tutorials/en_us/JARS/OPTIMIZATION/#different-kinds-of-lag","text":"TPS - Server Lag TPS stands for **T**icks **P**er **S**econd. It is also the only lag type a server owner has direct control over. A server processes all tasks at a rate of 20 TPS. Tasks like mob movement, crop growth, and player interactions with blocks need to be ticked by the server to function properly. A TPS below 20 means the server is running behind and must skip tasks in order to keep important tasks on time. Significant TPS loss usually presents itself with minor annoyances like intermittent mob freezing and block break resets. Severe cases could result in server-wide freezes or even crashes. TPS Ratings - 20.0 = Flawless - Well done. - 19.95-19.99 = Great - Unnoticeable TPS loss. Most servers live here. - 18.5-19.94 = Fair - Maybe some annoyances, but nothing game-ruining. - 16.0-18.4 = Poor - You definitely need to fix it if this is your average. - <16.0 = Unplayable... Ping - Connection Lag Ping (aka latency) reflects how long (in milliseconds) data takes to process and travel between the client and server host. The further a client is geographically separated from the server, the longer this transfer might take. Other common influences on ping are congested or slow connections. As a server owner (assuming you have a choice) you should host your server in a region where you prefer to have your player base or one that appeases a broad range of players. Ping Ratings - 1-90 = Great! - 91-179 = Good - Maybe a slight disadvantage in PvP. - 180-299 = Poor - Regular lag while interacting with blocks/players/entities. - 300-499 = Bad - Nearly unplayable. - 500+ = Assuming your bandwidth is solid, it's time to find a server closer to you. FPS - Client Lag Do not confuse TPS with FPS (**F**rames **P**er **S**econd). FPS reflects a client's ability to process and display what the game/server wants to render. FPS is 100% client side and has nothing to do with server performance. The only thing a server can do to help FPS is cut server features so dinosaur PCs can keep up, but even that is unlikely to make a big difference. Instead of reducing server features, recommend a popular client mod called Optifine to players. FPS Ratings Note: These rates assume your standing average in a non-graphic-intense location. 60+ = Perfect - Anything over 60 FPS is overkill for Minecraft. Consider capping FPS below 80 to avoid unnecessary stress on hardware. 40-59 = Great - Should have no issues. 25-39 = Good - Occasional rendering lag. Issues if you enter graphic-intense areas. 15-24 = Poor - Constant rendering glitches. Probably freeze in GI area. 1-10 = Bad - Client should significantly reduce graphic settings.","title":"Different kinds of Lag"},{"location":"tutorials/en_us/JARS/OPTIMIZATION/#whats-lagging-measuring-performance","text":"","title":"What's lagging? - measuring performance"},{"location":"tutorials/en_us/JARS/OPTIMIZATION/#mspt","text":"Paper offers a /mspt command that will tell you how much time server took to calculate recent ticks. If the first and second value you see are lower than 50, then congratulations! Your server is not lagging! If the third value is over 50 then it means there was at least 1 tick that took longer. That's completely normal and happens from time to time, so don't panic.","title":"mspt"},{"location":"tutorials/en_us/JARS/OPTIMIZATION/#timings","text":"Great way to see what might be going on when your server is lagging are timings. Timings is a tool that lets you see exactly what tasks are taking the longest. It's the most basic troubleshooting tool and if you ask for help regarding lag you will most likely be asked for your timings. To get timings of your server you just need to execute /timings paste command and click the link you're provided with. You can share this link with other people to let them help you. It's also easy to misread if you don't know what you're doing. There is a detailed video tutorial by Aikar on how to read them.","title":"timings"},{"location":"tutorials/en_us/JARS/OPTIMIZATION/#spark","text":"Spark is a plugin that allows you to profile your servers CPU and memory usage. You can read on how to use it on its wiki . There's also a guide on how to find the cause of lag spikes here .","title":"spark"},{"location":"tutorials/en_us/JARS/OPTIMIZATION/#optimizing-your-jar-specific-configurations-to-your-needs","text":"Every .jar has its own set of configurations that you can tweak to suit your specific needs. You probably wont find as effective the config of a minigames server in a survival server. You should read every config, understand it, and choose if you need to use it or not. This is extremely important in survival servers as some config values can ruin your mob spawning rates or destroy your players custom redstone circuits. Here is a guide made by a well-known member of the community that can help you further in this optimization, it is limited to PaperMC and doesn't have optimized configs for Tuinity, Purpur or any other forks. You can also join this discord , which has an amazing Discord bot that assists you optimizing your server based on your timings report! Remember this is a general suggestion, it may not suit your needs.","title":"Optimizing your .jar specific configurations to YOUR NEEDS"},{"location":"tutorials/en_us/JARS/OPTIMIZATION/#aikars-flags-startup-flags","text":"You should also use correct startup flags, the Aikars flags ! Sadly many server hosts won't allow you to edit startup flags by yourselft, but they are likely to do it for you if you open a ticket.","title":"Aikars Flags / Startup Flags"},{"location":"tutorials/en_us/JARS/OPTIMIZATION/#world-pre-generation","text":"Another essential step in survival servers is to pre-generate your world, because chunk generation consumes a lot of resources. One of several possible ways is shown below Download and install Fast Chunk Pregenerator Set your desired world limit. Use the command: /fcp start <radius> [world] [chunkX] [chunkZ] Wait for it to finish, it may take a long time and the server will lag while it works. This MUST be done with the server empty / closed to public. For a guide on Fast Chunk Pregenerator go here .","title":"World Pre-Generation"},{"location":"tutorials/en_us/JARS/OPTIMIZATION/#too-good-to-be-true-plugins","text":"","title":"\"Too good to be true\" plugins"},{"location":"tutorials/en_us/JARS/OPTIMIZATION/#plugins-removing-ground-items","text":"Absolutely unnecessary since they can be replaced with merge radius and alt-item-despawn-rate and frankly, they're less configurable than basic server configs. They tend to use more resources scanning and removing items than not removing the items at all.","title":"Plugins removing ground items"},{"location":"tutorials/en_us/JARS/OPTIMIZATION/#mob-stacker-plugins","text":"It's really hard to justify using one. Stacking naturally spawned entities causes more lag than not stacking them at all due to the server constantly trying to spawn more mobs. The only \"acceptable\" use case is for spawners on servers with a large amount of spawners.","title":"Mob stacker plugins"},{"location":"tutorials/en_us/JARS/OPTIMIZATION/#plugins-enablingdisabling-other-plugins","text":"Anything that enables or disables plugins on runtime is extremely dangerous. Loading a plugin like that can cause fatal errors with tracking data and disabling a plugin can lead to errors due to removing dependency. The /reload command suffers from exact same issues.","title":"Plugins enabling/disabling other plugins"},{"location":"tutorials/en_us/PLUGINS/FAST_CHUNK_PREGENERATOR/","text":"How to install and use Fast Chunk Pregenerator \u00b6 What is Fast Chunk Pregenerator? \u00b6 Fast Chunk Pregenerator, or FCP, is a plugin that generates chunks of your world so it doesn't have to generate new chunks while people are exploring. It helps with server lag because generating new chunks takes up a lot of server resources. Prerequisites \u00b6 You need a server running which can handle Spigot plugins (for example Spigot, Paper or Purpur; look here for a further description of the servers) Now what you need to do is download FCP. Go to the Spigot Page and click on Download Now Installation \u00b6 Move (or copy) the downloaded JAR into the plugins directory /plugins/ in your server directory (where the Server JAR is). Now restart your server (do /restart or do /stop and start it again). Using FCP \u00b6 Getting Started \u00b6 Note: Never use this plugin while people are playing on your server, it causes extreme lag. Don't worry, the lag is normal as it's generating lots of chunks. To use these commands you either need access to the console, have operator or have the fcp.commands permission. To get started, go to the server console and type /fcp start <radius> [world] [chunkX] [chunkZ] . - radius is how many blocks outwards you want to be generated. - world is what world you want to be generated, works with custom worlds with multiverse and similar plugins. - chunkX is the X coordinate you want the generation to start on. - chunkZ is the Z coordinate you want the generation to start on. Once you have run the command it will start generating the chunks, all you have to do now is wait. It may take a long time if you are generating thousands of blocks outwards. Pause, Resume and Cancel Generation Tasks \u00b6 FCP has some useful commands that allow you to pause, resume and cancel generation tasks. Task Command Function Pausing Generation /fcp pause Pauses the current generation task. Resuming Generation /fcp resume Pauses the current generation task. Canceling Generation /fcp cancel Cancels the current generation task. Pending Generation Tasks \u00b6 You can have a queue of generation tasks by running the command in Getting Started multiple times. To view the pending generation task run the command /fcp pending Config \u00b6 # Max milliseconds the generation thread should take per tick. # Increase for more chunks per tick and less TPS # Should be below 35 if async. MaxMillisPerTick: 28.5 # Amount of ticks to wait between generations. WaitTicksBetween: 0 # Only enable on Paper. AsyncChunkLoadingEnabled: false # Increases chunk priority. # This could prevent loading of chunks that # players may need but could also increase generation speed. # Disable if you want steady generations. HighAsyncPriority: true # Experimental. Disable for now. UnsafeAsyncCalls: false # Only usefull when using AsyncChunkLoading # A good value is 4 * CPU core count for exampe. MaxParallelAsyncCalls: 8 # How many seconds to wait between each notification. SecondsPerNotification: 5 # The progess output. Can be one of: # NONE, CONSOLE, BROADCAST, OP, OP_AND_CONSOLE NotificationType: CONSOLE # Pauses generation if a player logs in # and resumes when the last one logs out OnlyGenerateWithNoPlayersOnline: false MaxMillisPerTick - This is the max milliseconds the generation thread should take per tick. Increase the number for more chunks generated per tick and less TPS. Should be below 35 if async. Default: 28.5 WaitTicksBetween - Amount of ticks to wait between generations. Default: 0 AsyncChunkLoadingEnabled: Whether async chunk loading is enabled, only use if your using paper or a paper fork. Default: false HighAsyncPriority - Increases chunk priority. Could prevent the loading of chunks that players need but also could increase generation speed. Disable for steady generations. Default: true UnsafeAsyncCalls - Experimental setting, disable. Default: false MaxParallelAsyncCalls - Only useful when using AsyncChunkLoading. A good value is 4 * CPU core count. Default: 8 SecondsPerNotification - Seconds between generation notifications. Default: 5 NotificationType - Notification type, NONE (No notifications), CONSOLE (Notify console), BROADCAST (Notify everyone on the server), OP (Notify players with OP) or OP_AND_CONSOLE (Notify both the console and players with OP). Default: CONSOLE OnlyGenerateWithNoPlayersOnline - Generates chunks only when no players are online, if someone joins it will pause the generation and when they leave it will resume.","title":"How to install and use [Fast Chunk Pregenerator](https://www.spigotmc.org/resources/fast-chunk-pregenerator.74429/)"},{"location":"tutorials/en_us/PLUGINS/FAST_CHUNK_PREGENERATOR/#how-to-install-and-use-fast-chunk-pregenerator","text":"","title":"How to install and use Fast Chunk Pregenerator"},{"location":"tutorials/en_us/PLUGINS/FAST_CHUNK_PREGENERATOR/#what-is-fast-chunk-pregenerator","text":"Fast Chunk Pregenerator, or FCP, is a plugin that generates chunks of your world so it doesn't have to generate new chunks while people are exploring. It helps with server lag because generating new chunks takes up a lot of server resources.","title":"What is Fast Chunk Pregenerator?"},{"location":"tutorials/en_us/PLUGINS/FAST_CHUNK_PREGENERATOR/#prerequisites","text":"You need a server running which can handle Spigot plugins (for example Spigot, Paper or Purpur; look here for a further description of the servers) Now what you need to do is download FCP. Go to the Spigot Page and click on Download Now","title":"Prerequisites"},{"location":"tutorials/en_us/PLUGINS/FAST_CHUNK_PREGENERATOR/#installation","text":"Move (or copy) the downloaded JAR into the plugins directory /plugins/ in your server directory (where the Server JAR is). Now restart your server (do /restart or do /stop and start it again).","title":"Installation"},{"location":"tutorials/en_us/PLUGINS/FAST_CHUNK_PREGENERATOR/#using-fcp","text":"","title":"Using FCP"},{"location":"tutorials/en_us/PLUGINS/FAST_CHUNK_PREGENERATOR/#getting-started","text":"Note: Never use this plugin while people are playing on your server, it causes extreme lag. Don't worry, the lag is normal as it's generating lots of chunks. To use these commands you either need access to the console, have operator or have the fcp.commands permission. To get started, go to the server console and type /fcp start <radius> [world] [chunkX] [chunkZ] . - radius is how many blocks outwards you want to be generated. - world is what world you want to be generated, works with custom worlds with multiverse and similar plugins. - chunkX is the X coordinate you want the generation to start on. - chunkZ is the Z coordinate you want the generation to start on. Once you have run the command it will start generating the chunks, all you have to do now is wait. It may take a long time if you are generating thousands of blocks outwards.","title":"Getting Started"},{"location":"tutorials/en_us/PLUGINS/FAST_CHUNK_PREGENERATOR/#pause-resume-and-cancel-generation-tasks","text":"FCP has some useful commands that allow you to pause, resume and cancel generation tasks. Task Command Function Pausing Generation /fcp pause Pauses the current generation task. Resuming Generation /fcp resume Pauses the current generation task. Canceling Generation /fcp cancel Cancels the current generation task.","title":"Pause, Resume and Cancel Generation Tasks"},{"location":"tutorials/en_us/PLUGINS/FAST_CHUNK_PREGENERATOR/#pending-generation-tasks","text":"You can have a queue of generation tasks by running the command in Getting Started multiple times. To view the pending generation task run the command /fcp pending","title":"Pending Generation Tasks"},{"location":"tutorials/en_us/PLUGINS/FAST_CHUNK_PREGENERATOR/#config","text":"# Max milliseconds the generation thread should take per tick. # Increase for more chunks per tick and less TPS # Should be below 35 if async. MaxMillisPerTick: 28.5 # Amount of ticks to wait between generations. WaitTicksBetween: 0 # Only enable on Paper. AsyncChunkLoadingEnabled: false # Increases chunk priority. # This could prevent loading of chunks that # players may need but could also increase generation speed. # Disable if you want steady generations. HighAsyncPriority: true # Experimental. Disable for now. UnsafeAsyncCalls: false # Only usefull when using AsyncChunkLoading # A good value is 4 * CPU core count for exampe. MaxParallelAsyncCalls: 8 # How many seconds to wait between each notification. SecondsPerNotification: 5 # The progess output. Can be one of: # NONE, CONSOLE, BROADCAST, OP, OP_AND_CONSOLE NotificationType: CONSOLE # Pauses generation if a player logs in # and resumes when the last one logs out OnlyGenerateWithNoPlayersOnline: false MaxMillisPerTick - This is the max milliseconds the generation thread should take per tick. Increase the number for more chunks generated per tick and less TPS. Should be below 35 if async. Default: 28.5 WaitTicksBetween - Amount of ticks to wait between generations. Default: 0 AsyncChunkLoadingEnabled: Whether async chunk loading is enabled, only use if your using paper or a paper fork. Default: false HighAsyncPriority - Increases chunk priority. Could prevent the loading of chunks that players need but also could increase generation speed. Disable for steady generations. Default: true UnsafeAsyncCalls - Experimental setting, disable. Default: false MaxParallelAsyncCalls - Only useful when using AsyncChunkLoading. A good value is 4 * CPU core count. Default: 8 SecondsPerNotification - Seconds between generation notifications. Default: 5 NotificationType - Notification type, NONE (No notifications), CONSOLE (Notify console), BROADCAST (Notify everyone on the server), OP (Notify players with OP) or OP_AND_CONSOLE (Notify both the console and players with OP). Default: CONSOLE OnlyGenerateWithNoPlayersOnline - Generates chunks only when no players are online, if someone joins it will pause the generation and when they leave it will resume.","title":"Config"},{"location":"tutorials/en_us/PLUGINS/FAWE/","text":"How to install and use Fast Async World Edit (FAWE) \u00b6 WARNING \u00b6 FAWE can cause world corruption - Use at your own risk. How it happens \u00b6 FAWE asyncs tasks that shouldn't be async, then it skips other parts of the process to speed it up. FAWE gets it's speed from skipping important tasks needed for a stable experience. Because FAWE skipped important tasks it broke on Starlight (Tuinity's lighting engine). Starlight had to remove lots of it's optimizations because people using FAWE were complaining about it not working. Paper even considered blacklisting the plugin from even loading at one point, since many of the bugs reported to Paper were caused by FAWE corruptions. They decided it was best not to intervene and just let people break their stuff. At least then they couldn't be labelled the bad guys and could finger point at FAWE. There is a reason WorldEdit hasn't made anything \"async\". FAWE is known to corrupt worlds. We strongly recommend using the regular WorldEdit and just limiting your tasks to what can be handled which is already quite large because of WorldEdit's recent major optimizations. What is FAWE? \u00b6 WorldEdit is a plugin for building structures more quickly. For example, building a sphere, pyramid, or filling a cuboid. FAWE is a fork of WorldEdit and which has huge speed and memory improvements and considerably more features Prerequisites \u00b6 Warning: FAWE needs Nashorn which was removed in Java 15 for some features. FAWE recommends using version 11. You need a server running which can handle Spigot plugins (for example Spigot, Paper or Purpur; look here for a further description of the servers) The first thing to do is to download FAWE. Go to the Spigot Page and click on Download Now Now you should be on FAWE's Jenkins site. Click on the JAR under Last successful artifacts and it should be downloaded. Note: There's also a direct link to the last stable build Installation \u00b6 Move (or copy) the downloaded JAR into the plugins directory in your server directory (where the Server JAR is) Now restart your server (do /restart or do /stop and start it again). Note: You can also do /reload but that is not recommended and can cause bugs and memory leak You should see something like this in your server logs: [15:04:57 INFO]: [FastAsyncWorldEdit] Enabling FastAsyncWorldEdit v1.16-581;dd65cff [15:04:57 INFO]: WEPIF: Using the Bukkit Permissions API. [15:04:58 INFO]: Using com.sk89q.worldedit.bukkit.adapter.impl.FAWE_Spigot_v1_16_R3 as the Bukkit adapter [15:04:58 INFO]: Registering commands with com.sk89q.worldedit.bukkit.BukkitServerInterface Using FAWE \u00b6 Getting Started \u00b6 To do stuff with FAWE you need the so-called wand. Normally, that's a wooden axe, so just grab one out of your inventory or do //wand . FAWE's commands always start with two slashes and not just one and FAWE often needs two positions for stuff, for example, for filling a cuboid, it needs two of the corners. Filling an cuboid \u00b6 Select the two corners by leftclicking on one corner block and rightclicking on another corner block Note: The 1440 means that 1440 blocks are selected. Now you fill it, for example, with stone so do //set stone Undoing \u00b6 If you did something wrong, don't worry, just do //undo Further commands \u00b6 For a command list do //help or go here","title":"How to install and use [Fast Async World Edit (FAWE)](https://www.spigotmc.org/resources/fast-async-worldedit.13932/)"},{"location":"tutorials/en_us/PLUGINS/FAWE/#how-to-install-and-use-fast-async-world-edit-fawe","text":"","title":"How to install and use Fast Async World Edit (FAWE)"},{"location":"tutorials/en_us/PLUGINS/FAWE/#warning","text":"FAWE can cause world corruption - Use at your own risk.","title":"WARNING"},{"location":"tutorials/en_us/PLUGINS/FAWE/#how-it-happens","text":"FAWE asyncs tasks that shouldn't be async, then it skips other parts of the process to speed it up. FAWE gets it's speed from skipping important tasks needed for a stable experience. Because FAWE skipped important tasks it broke on Starlight (Tuinity's lighting engine). Starlight had to remove lots of it's optimizations because people using FAWE were complaining about it not working. Paper even considered blacklisting the plugin from even loading at one point, since many of the bugs reported to Paper were caused by FAWE corruptions. They decided it was best not to intervene and just let people break their stuff. At least then they couldn't be labelled the bad guys and could finger point at FAWE. There is a reason WorldEdit hasn't made anything \"async\". FAWE is known to corrupt worlds. We strongly recommend using the regular WorldEdit and just limiting your tasks to what can be handled which is already quite large because of WorldEdit's recent major optimizations.","title":"How it happens"},{"location":"tutorials/en_us/PLUGINS/FAWE/#what-is-fawe","text":"WorldEdit is a plugin for building structures more quickly. For example, building a sphere, pyramid, or filling a cuboid. FAWE is a fork of WorldEdit and which has huge speed and memory improvements and considerably more features","title":"What is FAWE?"},{"location":"tutorials/en_us/PLUGINS/FAWE/#prerequisites","text":"Warning: FAWE needs Nashorn which was removed in Java 15 for some features. FAWE recommends using version 11. You need a server running which can handle Spigot plugins (for example Spigot, Paper or Purpur; look here for a further description of the servers) The first thing to do is to download FAWE. Go to the Spigot Page and click on Download Now Now you should be on FAWE's Jenkins site. Click on the JAR under Last successful artifacts and it should be downloaded. Note: There's also a direct link to the last stable build","title":"Prerequisites"},{"location":"tutorials/en_us/PLUGINS/FAWE/#installation","text":"Move (or copy) the downloaded JAR into the plugins directory in your server directory (where the Server JAR is) Now restart your server (do /restart or do /stop and start it again). Note: You can also do /reload but that is not recommended and can cause bugs and memory leak You should see something like this in your server logs: [15:04:57 INFO]: [FastAsyncWorldEdit] Enabling FastAsyncWorldEdit v1.16-581;dd65cff [15:04:57 INFO]: WEPIF: Using the Bukkit Permissions API. [15:04:58 INFO]: Using com.sk89q.worldedit.bukkit.adapter.impl.FAWE_Spigot_v1_16_R3 as the Bukkit adapter [15:04:58 INFO]: Registering commands with com.sk89q.worldedit.bukkit.BukkitServerInterface","title":"Installation"},{"location":"tutorials/en_us/PLUGINS/FAWE/#using-fawe","text":"","title":"Using FAWE"},{"location":"tutorials/en_us/PLUGINS/FAWE/#getting-started","text":"To do stuff with FAWE you need the so-called wand. Normally, that's a wooden axe, so just grab one out of your inventory or do //wand . FAWE's commands always start with two slashes and not just one and FAWE often needs two positions for stuff, for example, for filling a cuboid, it needs two of the corners.","title":"Getting Started"},{"location":"tutorials/en_us/PLUGINS/FAWE/#filling-an-cuboid","text":"Select the two corners by leftclicking on one corner block and rightclicking on another corner block Note: The 1440 means that 1440 blocks are selected. Now you fill it, for example, with stone so do //set stone","title":"Filling an cuboid"},{"location":"tutorials/en_us/PLUGINS/FAWE/#undoing","text":"If you did something wrong, don't worry, just do //undo","title":"Undoing"},{"location":"tutorials/en_us/PLUGINS/FAWE/#further-commands","text":"For a command list do //help or go here","title":"Further commands"},{"location":"tutorials/en_us/SETTINGS/CHANGING/","text":"Changing server settings \u00b6 In this tutorial we assume you use PaperSpigot , we are discussing the following points and more: Changing the server appearance in the serverlist Setting maximum playercount More things (feel free to add something) Changing server appearance \u00b6 Go to your server folder. Here will you find multiple files. First we are going to edit the Server.properties file. Search for motd , the default is motd=A Minecraft Server . Now we are going to change that to something a bit more personal and colorful. Change the part after motd= to someting that you like, to use colors you add a Minecraft motd color code (see graphic below), for example: motd=\\u00A76Anything Minecraft! displays \"Anything Minecraft!\" in gold. You can also change the server icon, that's the icon left from the motd in the serverlist. For this you need a PNG image scaled dow to 64x64 pixels. Paste this in your server folder (the same where your Jar is located) and rename it to server-icon.png . Setting maximum playercount \u00b6 For this part you need to find max-players in the Server.properties , simply change this to the amount of players you want on your server. For 10+ players it is recommended to have at least 4Gb RAM allocated.","title":"Changing server settings"},{"location":"tutorials/en_us/SETTINGS/CHANGING/#changing-server-settings","text":"In this tutorial we assume you use PaperSpigot , we are discussing the following points and more: Changing the server appearance in the serverlist Setting maximum playercount More things (feel free to add something)","title":"Changing server settings"},{"location":"tutorials/en_us/SETTINGS/CHANGING/#changing-server-appearance","text":"Go to your server folder. Here will you find multiple files. First we are going to edit the Server.properties file. Search for motd , the default is motd=A Minecraft Server . Now we are going to change that to something a bit more personal and colorful. Change the part after motd= to someting that you like, to use colors you add a Minecraft motd color code (see graphic below), for example: motd=\\u00A76Anything Minecraft! displays \"Anything Minecraft!\" in gold. You can also change the server icon, that's the icon left from the motd in the serverlist. For this you need a PNG image scaled dow to 64x64 pixels. Paste this in your server folder (the same where your Jar is located) and rename it to server-icon.png .","title":"Changing server appearance"},{"location":"tutorials/en_us/SETTINGS/CHANGING/#setting-maximum-playercount","text":"For this part you need to find max-players in the Server.properties , simply change this to the amount of players you want on your server. For 10+ players it is recommended to have at least 4Gb RAM allocated.","title":"Setting maximum playercount"},{"location":"tutorials/en_us/SETUP/ADVANCED/","text":"Advanced Configuration \u00b6 Minecraft at scale with Kuberetes \u00b6 k3s simple configuration","title":"Advanced Configuration"},{"location":"tutorials/en_us/SETUP/ADVANCED/#advanced-configuration","text":"","title":"Advanced Configuration"},{"location":"tutorials/en_us/SETUP/ADVANCED/#minecraft-at-scale-with-kuberetes","text":"k3s simple configuration","title":"Minecraft at scale with Kuberetes"},{"location":"tutorials/en_us/SETUP/BASIC/","text":"Intro \u00b6 This article aims to give you directions on how you can run and join your Minecraft server. This will all be done locally on your computer. Setup \u00b6 The very first thing required in setting up a Minecraft server is to verify if you have all the prerequisites, be they software or hardware requirements. As for the software, an updated version of Java is highly recommended, and in some instances, required. These can be installed from oracle's website, and try to keep up on updating these as previously mentioned, it is sometimes required to have the latest version of Java (at the time of writing, the version is 15.0.2. You can download it from Oracle's site . As for the hardware requirements, they are not too strict, but they restrict what type of server you'll be running. If you don't particularly care for the performance of the server with a couple of players on a vanilla server, you should be fine to skip over this section, but if you're a hardware nerd or would like to learn more on the subject, this will attempt to enlighten you. When choosing parts for a Minecraft server, one should stray away from the higher-core-count CPUs and choose something with better single-threaded performance, as that is nearly all that Minecraft will use. Memory is often one of the most popularly sought after specs in a Server box, however a good computer alone it does not make. When choosing the parts for the computer, put more effort into finding a better CPU with the amount of RAM not as an afterthought, but a second priority. Typically speaking, more memory allows for more players and more mods, but always make sure that your CPU is keeping up with the server itself before trying to throw more memory at the server, as sometimes with more memory comes worse performance due to how java is written. Once you've figured through the prerequisites, you need to find the best server jar for your requirements; along with this thread there is a part for choosing a server jar , but if you'd rather go the easy route and stick with vanilla, a popular and quite useful to get the server jars from is mcversions.net , as that contains legacy files along with newly released versions. Setup for Windows \u00b6 Setup for Linux \u00b6 Setup for Docker \u00b6","title":"Intro"},{"location":"tutorials/en_us/SETUP/BASIC/#intro","text":"This article aims to give you directions on how you can run and join your Minecraft server. This will all be done locally on your computer.","title":"Intro"},{"location":"tutorials/en_us/SETUP/BASIC/#setup","text":"The very first thing required in setting up a Minecraft server is to verify if you have all the prerequisites, be they software or hardware requirements. As for the software, an updated version of Java is highly recommended, and in some instances, required. These can be installed from oracle's website, and try to keep up on updating these as previously mentioned, it is sometimes required to have the latest version of Java (at the time of writing, the version is 15.0.2. You can download it from Oracle's site . As for the hardware requirements, they are not too strict, but they restrict what type of server you'll be running. If you don't particularly care for the performance of the server with a couple of players on a vanilla server, you should be fine to skip over this section, but if you're a hardware nerd or would like to learn more on the subject, this will attempt to enlighten you. When choosing parts for a Minecraft server, one should stray away from the higher-core-count CPUs and choose something with better single-threaded performance, as that is nearly all that Minecraft will use. Memory is often one of the most popularly sought after specs in a Server box, however a good computer alone it does not make. When choosing the parts for the computer, put more effort into finding a better CPU with the amount of RAM not as an afterthought, but a second priority. Typically speaking, more memory allows for more players and more mods, but always make sure that your CPU is keeping up with the server itself before trying to throw more memory at the server, as sometimes with more memory comes worse performance due to how java is written. Once you've figured through the prerequisites, you need to find the best server jar for your requirements; along with this thread there is a part for choosing a server jar , but if you'd rather go the easy route and stick with vanilla, a popular and quite useful to get the server jars from is mcversions.net , as that contains legacy files along with newly released versions.","title":"Setup"},{"location":"tutorials/en_us/SETUP/BASIC/#setup-for-windows","text":"","title":"Setup for Windows"},{"location":"tutorials/en_us/SETUP/BASIC/#setup-for-linux","text":"","title":"Setup for Linux"},{"location":"tutorials/en_us/SETUP/BASIC/#setup-for-docker","text":"","title":"Setup for Docker"},{"location":"tutorials/en_us/SETUP/RASPI/","text":"Raspberry Pi MC Server \u00b6 Here you will learn how to easily make a minecraft server on a Raspberry Pi! WARNING: You WILL have to open the port of your router, and we will not include a guide here because every router is different. Step 1 \u00b6 Open the terminal emulator and install git with this command: sudo apt install git . Then insert this: git clone https://github.com/timof121/RasPiMC-Server.git Then put: cd RasPiMC-Server/ Step 2 \u00b6 Now you need to install the server running the RasPiMC-install.sh, but before, you need to put: chmod u+x RasPiMC-install.sh Now you can do: ./RasPiMC-install.sh and it will start installing the server. When it asks you to install something, you just type \"y\" and just wait. By default it will build the latest spigot version (Currently 1.16.5). but if you want another version, you can download it from GetBukkit and just rename it to spigot.jar! Step 3 \u00b6 Now that you have installed the server, you need to start the server with: ./start.sh If you want to change the max/min RAM, you can change it at the start.sh. Step 4 \u00b6 Now you can configure the server, play with your friends, download plugins... You can find a lot of plugins on SpigotMC or Bukkit You may want to install plugins like WorldEdit or WorldGuard... And this is the end of the tutorial. FAQ \u00b6 Here are some basic answers. How to change allocated RAM \u00b6 Open start.sh in nano ( nano start.sh ). You will see this: `#!/bin/bash java -Xms512M -Xmx1G -jar spigot.jar nogui` java stands for summoning the java enviroment, -Xms512M means that the minium dedicated RAM is 512 MegaBytes, -Xmx1G means the same but this time that 1GB is the maxium amount. So if you want ti change RAM, just change the -Xmx argument. How do I get another Spigot version? \u00b6 You have two ways; the first one is downloading form a mirror, and the second is building it yourself. The first one is very simple: just go to any mirror like GetBukkit , click Downloads and select your version! The second one is a bit more hard: first, run this command to create a folder called Buildtools mkdir Buildtools . Then run cd Buildtools to go to the folder that you created. Then run this in your terminal for downloading BuildTools wget -O BuildTools.jar https://hub.spigotmc.org/jenkins/job/BuildTools/lastSuccessfulBuild/artifact/target/BuildTools.jar and then run java -jar BuildTools.jar --rev latest to start building the latest Spigot JAR. You can change latest to almost any Minecraft version starting from 1.8. This may take more than 15 minutes if you are on a Pi 3 or lower. When the building process finishes, you will find both Spigot and Crafbukkit. Then just replace your server's spigot.jar with the new one.","title":"Raspberry Pi MC Server"},{"location":"tutorials/en_us/SETUP/RASPI/#raspberry-pi-mc-server","text":"Here you will learn how to easily make a minecraft server on a Raspberry Pi! WARNING: You WILL have to open the port of your router, and we will not include a guide here because every router is different.","title":"Raspberry Pi MC Server"},{"location":"tutorials/en_us/SETUP/RASPI/#step-1","text":"Open the terminal emulator and install git with this command: sudo apt install git . Then insert this: git clone https://github.com/timof121/RasPiMC-Server.git Then put: cd RasPiMC-Server/","title":"Step 1"},{"location":"tutorials/en_us/SETUP/RASPI/#step-2","text":"Now you need to install the server running the RasPiMC-install.sh, but before, you need to put: chmod u+x RasPiMC-install.sh Now you can do: ./RasPiMC-install.sh and it will start installing the server. When it asks you to install something, you just type \"y\" and just wait. By default it will build the latest spigot version (Currently 1.16.5). but if you want another version, you can download it from GetBukkit and just rename it to spigot.jar!","title":"Step 2"},{"location":"tutorials/en_us/SETUP/RASPI/#step-3","text":"Now that you have installed the server, you need to start the server with: ./start.sh If you want to change the max/min RAM, you can change it at the start.sh.","title":"Step 3"},{"location":"tutorials/en_us/SETUP/RASPI/#step-4","text":"Now you can configure the server, play with your friends, download plugins... You can find a lot of plugins on SpigotMC or Bukkit You may want to install plugins like WorldEdit or WorldGuard... And this is the end of the tutorial.","title":"Step 4"},{"location":"tutorials/en_us/SETUP/RASPI/#faq","text":"Here are some basic answers.","title":"FAQ"},{"location":"tutorials/en_us/SETUP/RASPI/#how-to-change-allocated-ram","text":"Open start.sh in nano ( nano start.sh ). You will see this: `#!/bin/bash java -Xms512M -Xmx1G -jar spigot.jar nogui` java stands for summoning the java enviroment, -Xms512M means that the minium dedicated RAM is 512 MegaBytes, -Xmx1G means the same but this time that 1GB is the maxium amount. So if you want ti change RAM, just change the -Xmx argument.","title":"How to change allocated RAM"},{"location":"tutorials/en_us/SETUP/RASPI/#how-do-i-get-another-spigot-version","text":"You have two ways; the first one is downloading form a mirror, and the second is building it yourself. The first one is very simple: just go to any mirror like GetBukkit , click Downloads and select your version! The second one is a bit more hard: first, run this command to create a folder called Buildtools mkdir Buildtools . Then run cd Buildtools to go to the folder that you created. Then run this in your terminal for downloading BuildTools wget -O BuildTools.jar https://hub.spigotmc.org/jenkins/job/BuildTools/lastSuccessfulBuild/artifact/target/BuildTools.jar and then run java -jar BuildTools.jar --rev latest to start building the latest Spigot JAR. You can change latest to almost any Minecraft version starting from 1.8. This may take more than 15 minutes if you are on a Pi 3 or lower. When the building process finishes, you will find both Spigot and Crafbukkit. Then just replace your server's spigot.jar with the new one.","title":"How do I get another Spigot version?"},{"location":"tutorials/en_us/SETUP/PLATFORMS/DOCKER/","text":"Setup For Docker \u00b6 Prebuilt Docker \u00b6 Based on the docker image with the most pulls See itzg/docker-minecraft-server for more details Simple Launch \u00b6 docker run -d -p 25565 :25565 --name mc -e EULA = TRUE itzg/minecraft-server Docker Compose \u00b6 version: \"3\" services: mc: image: itzg/minecraft-server ports: - 25565:25565 environment: EULA: \"TRUE\" volumes: # attach the relative directory 'data' to the container's /data path ./data:/data You Build Docker \u00b6 You can use an already built docker image or just create a Dockerfile with following content: FROM openjdk WORKDIR /data COPY [ \"server.jar\" , \"eula.txt\" , \"start.sh\" ] ./ EXPOSE 25565 ENTRYPOINT [ \"/data/start.sh\" ] Now, supposing you have docker installed, build the docker image \u2192 docker build . -t mcserver (You can replace mcserver , the name of the image, with whatever you want (as long as it doesn't interfere with the images on dockerhub)) Run the docker image \u2192 docker run --name mcserver -p 25565:25565 -d --restart unless-stopped mcserver or with docker compose, write following in a file named docker-compose.yml version: \"3\" services: mcserver: build: . restart: unless stopped ports: - 25565:25565 volumes: -./server:/root and run it: docker-compose up -d","title":"Setup For Docker"},{"location":"tutorials/en_us/SETUP/PLATFORMS/DOCKER/#setup-for-docker","text":"","title":"Setup For Docker"},{"location":"tutorials/en_us/SETUP/PLATFORMS/DOCKER/#prebuilt-docker","text":"Based on the docker image with the most pulls See itzg/docker-minecraft-server for more details","title":"Prebuilt Docker"},{"location":"tutorials/en_us/SETUP/PLATFORMS/DOCKER/#simple-launch","text":"docker run -d -p 25565 :25565 --name mc -e EULA = TRUE itzg/minecraft-server","title":"Simple Launch"},{"location":"tutorials/en_us/SETUP/PLATFORMS/DOCKER/#docker-compose","text":"version: \"3\" services: mc: image: itzg/minecraft-server ports: - 25565:25565 environment: EULA: \"TRUE\" volumes: # attach the relative directory 'data' to the container's /data path ./data:/data","title":"Docker Compose"},{"location":"tutorials/en_us/SETUP/PLATFORMS/DOCKER/#you-build-docker","text":"You can use an already built docker image or just create a Dockerfile with following content: FROM openjdk WORKDIR /data COPY [ \"server.jar\" , \"eula.txt\" , \"start.sh\" ] ./ EXPOSE 25565 ENTRYPOINT [ \"/data/start.sh\" ] Now, supposing you have docker installed, build the docker image \u2192 docker build . -t mcserver (You can replace mcserver , the name of the image, with whatever you want (as long as it doesn't interfere with the images on dockerhub)) Run the docker image \u2192 docker run --name mcserver -p 25565:25565 -d --restart unless-stopped mcserver or with docker compose, write following in a file named docker-compose.yml version: \"3\" services: mcserver: build: . restart: unless stopped ports: - 25565:25565 volumes: -./server:/root and run it: docker-compose up -d","title":"You Build Docker"},{"location":"tutorials/en_us/SETUP/PLATFORMS/LINUX/","text":"Setup For Linux \u00b6 Warning: You should prefer using your package manager (for example apt on Ubuntu and Debian) to install java because it's more organized with the package manager You can do this using the following command \u2192 sudo apt install openjdk-xx-jre xx being the version number you're aiming for. (You can view available versions using sudo apt-cache search openjdk ) Create a folder, for example named \"server\", for example in your home directory ( ~ ) \u2192 mkdir ~/server Copy your server jar to this folder and rename it to \"server.jar\" \u2192 mv ~/Downloads/spigot-1.16.5.jar ~/server/server.jar (supposing your server jar is in ~/Downloads and it's name is spigot-1.16.5.jar ) Create a text document named start.sh and write into it: java -Xmx1024M -jar server-jar nogui (the nogui might not be required) \u2192 echo \"java -Xmx1024M -jar server.jar nogui\" > start.sh now add execute permissions to the script and run it \u2192 chmod +x start.sh \u2192 ./start.sh This will say something like You need to agree to the EULA in order to run the server. Go to eula.txt for more info. so you have to edit eula.txt to say eula=true instead of eula=false \u2192 echo \"eula=true\" > eula.txt (Warning: This overwrites the comment with the link to the EULA) now launch the server / execute start.sh again \u2192 ./start.sh You have your server running. To join, launch Minecraft and join the server at 127.0.0.1 or localhost If you want to start the server and want to be able to exit out of the terminal without the server closing, there are two ways with which you can do this You can use an in-built linux utility called tmux . Use this if the server is intended to be temporarily up. You can register minecraft as a system service . Use this if the server is intended to be up 24/7 and requires automatic restarting in case of host shutdowns/failures. Setup With Tmux \u00b6 Start a tmux window tmux new-session -t sessionName sessionName being whatever you want to name the instance, for example minecraft-session This will automatically take you inside the tmux session. Start the server using java -Xmx1024M -Xms1024M -jar server-jar nogui Exit out of the tmux session using Ctrl+B then D You server will keep running in the background. To reattach to the session, tmux a -t sessionName sessionName being whatever you named the instance earlier. To destroy the session completely, you can attach to the session and then Ctrl+D out of it. It detaches from session and destroys it too. Setup As A System Service \u00b6 You need to set up a service if it should, for example automatically launch at boot or restart when it terminates So, create a file named minecraft.service in /etc/systemd/system (May require root permissions) \u2192 sudo touch /etc/systemd/system/minecraft.service (actually optional) And write into it: [Unit] Description=A Minecraft Server After=network.target StartLimitIntervalSec=0[Service] Type=simple Restart=always RestartSec=1 User={YOURUSERNAME} ExecStart=/home/{YOURUSERNAME}/server/start.sh of course, replace {YOURUSERNAME} with your username \u2192 sudo echo \"[Unit]\\nDescription=A Minecraft Server\\nAfter=network.target\\nStartLimitIntervalSec=0[Service]\\nType=simple\\nRestart=alwaysRestartSec=1\\nUser=$USER\\nExecStart=$HOME/server/start.sh\" > /etc/systemd/system/minecraft.service so you can now start the service \u2192 systemctl start minecraft Now you should be able to join It will restart automatically 1 second after it shut down. To make it start at boot, enable it \u2192 systemctl enable minecraft","title":"Setup For Linux"},{"location":"tutorials/en_us/SETUP/PLATFORMS/LINUX/#setup-for-linux","text":"Warning: You should prefer using your package manager (for example apt on Ubuntu and Debian) to install java because it's more organized with the package manager You can do this using the following command \u2192 sudo apt install openjdk-xx-jre xx being the version number you're aiming for. (You can view available versions using sudo apt-cache search openjdk ) Create a folder, for example named \"server\", for example in your home directory ( ~ ) \u2192 mkdir ~/server Copy your server jar to this folder and rename it to \"server.jar\" \u2192 mv ~/Downloads/spigot-1.16.5.jar ~/server/server.jar (supposing your server jar is in ~/Downloads and it's name is spigot-1.16.5.jar ) Create a text document named start.sh and write into it: java -Xmx1024M -jar server-jar nogui (the nogui might not be required) \u2192 echo \"java -Xmx1024M -jar server.jar nogui\" > start.sh now add execute permissions to the script and run it \u2192 chmod +x start.sh \u2192 ./start.sh This will say something like You need to agree to the EULA in order to run the server. Go to eula.txt for more info. so you have to edit eula.txt to say eula=true instead of eula=false \u2192 echo \"eula=true\" > eula.txt (Warning: This overwrites the comment with the link to the EULA) now launch the server / execute start.sh again \u2192 ./start.sh You have your server running. To join, launch Minecraft and join the server at 127.0.0.1 or localhost If you want to start the server and want to be able to exit out of the terminal without the server closing, there are two ways with which you can do this You can use an in-built linux utility called tmux . Use this if the server is intended to be temporarily up. You can register minecraft as a system service . Use this if the server is intended to be up 24/7 and requires automatic restarting in case of host shutdowns/failures.","title":"Setup For Linux"},{"location":"tutorials/en_us/SETUP/PLATFORMS/LINUX/#setup-with-tmux","text":"Start a tmux window tmux new-session -t sessionName sessionName being whatever you want to name the instance, for example minecraft-session This will automatically take you inside the tmux session. Start the server using java -Xmx1024M -Xms1024M -jar server-jar nogui Exit out of the tmux session using Ctrl+B then D You server will keep running in the background. To reattach to the session, tmux a -t sessionName sessionName being whatever you named the instance earlier. To destroy the session completely, you can attach to the session and then Ctrl+D out of it. It detaches from session and destroys it too.","title":"Setup With Tmux"},{"location":"tutorials/en_us/SETUP/PLATFORMS/LINUX/#setup-as-a-system-service","text":"You need to set up a service if it should, for example automatically launch at boot or restart when it terminates So, create a file named minecraft.service in /etc/systemd/system (May require root permissions) \u2192 sudo touch /etc/systemd/system/minecraft.service (actually optional) And write into it: [Unit] Description=A Minecraft Server After=network.target StartLimitIntervalSec=0[Service] Type=simple Restart=always RestartSec=1 User={YOURUSERNAME} ExecStart=/home/{YOURUSERNAME}/server/start.sh of course, replace {YOURUSERNAME} with your username \u2192 sudo echo \"[Unit]\\nDescription=A Minecraft Server\\nAfter=network.target\\nStartLimitIntervalSec=0[Service]\\nType=simple\\nRestart=alwaysRestartSec=1\\nUser=$USER\\nExecStart=$HOME/server/start.sh\" > /etc/systemd/system/minecraft.service so you can now start the service \u2192 systemctl start minecraft Now you should be able to join It will restart automatically 1 second after it shut down. To make it start at boot, enable it \u2192 systemctl enable minecraft","title":"Setup As A System Service"},{"location":"tutorials/en_us/SETUP/PLATFORMS/WINDOWS/","text":"Setup For Windows \u00b6 After downloading your server jar create a new folder. You can name it anything you want. Once you've done that, drag the server jar into the folder and rename it server so we can access it easily in the next step. Next, we need to create the file to run the server jar, you will need to enable file extensions if you haven't already. Create a new text document and name it \"run\", now open it and type java -Xmx1024M -Xms1024M -jar server.jar nogui PAUSE 1024M is how many megabytes of RAM is allocated to the server, 1024M or 2048M is good for our purpose. If you ever need to change the amount just change the values. Save the file and close your text editor, go to the file in File Explorer and right-click, rename, and highlight the file extension \"txt\" and type \"bat\". This changes it to a batch file so we can run the server jar. We are ready to run the server now! Double click the run.bat file and it should come up with a new terminal window and after a while say \"Agree to the Minecraft EULA\". Close out of the terminal window and find a file called eula.txt that was generated. Open it and change eula=false to eula=true , save it then double click run.bat again. It may take a while for all the files to generate so be patient, once it's done your server should be good to go! To join the server open Minecraft, go to multiplayer and add a new server, in the server IP add \"localhost\", click done and join your very own Minecraft server! If you would like to be able to access the server from outside your local network, you're going to have to do what's called Port Forwarding, essentially allowing traffic to flow in and out through your router through a specific port to the computer that you're running the server on. Keep in mind this varies from ISP to ISP and from router to router, so a good guide dependent on your router is here . By default you're going to want to port forward the port 25565 for both the TCP and UDP protocols. To check whether the port forward fully worked, we recommend heading over to this website while your minecraft server is open (preferably after a restart post port forwarding), plug in the port you'd like to check, and if it says open you're good! If not, there might be something you're going to have to redo along the process. Another reason a port forward might have failed is the windows firewall. To configure this, navigate to the windows defender control panel screen, and head over into advanced settings (you will need admin to do this). Go into inbound rules and outbound rules, and create a new rule for each, name it whatever you like, and make sure that it is allowing the port 25565 on BOTH TCP and UDP (you might need to set up 2 rules for each side). Once that is done, windows should no longer block a server running on that port on your machine. Note: some ISPs have built in security funcitons in the router itself (looking at you xFinity), and as such they may block people from connecting to the server. While we do not recommend turning off a security function for the everyday user, in some instances it is required. This process is slightly different for a modded server so we will go over it here!","title":"Setup For Windows"},{"location":"tutorials/en_us/SETUP/PLATFORMS/WINDOWS/#setup-for-windows","text":"After downloading your server jar create a new folder. You can name it anything you want. Once you've done that, drag the server jar into the folder and rename it server so we can access it easily in the next step. Next, we need to create the file to run the server jar, you will need to enable file extensions if you haven't already. Create a new text document and name it \"run\", now open it and type java -Xmx1024M -Xms1024M -jar server.jar nogui PAUSE 1024M is how many megabytes of RAM is allocated to the server, 1024M or 2048M is good for our purpose. If you ever need to change the amount just change the values. Save the file and close your text editor, go to the file in File Explorer and right-click, rename, and highlight the file extension \"txt\" and type \"bat\". This changes it to a batch file so we can run the server jar. We are ready to run the server now! Double click the run.bat file and it should come up with a new terminal window and after a while say \"Agree to the Minecraft EULA\". Close out of the terminal window and find a file called eula.txt that was generated. Open it and change eula=false to eula=true , save it then double click run.bat again. It may take a while for all the files to generate so be patient, once it's done your server should be good to go! To join the server open Minecraft, go to multiplayer and add a new server, in the server IP add \"localhost\", click done and join your very own Minecraft server! If you would like to be able to access the server from outside your local network, you're going to have to do what's called Port Forwarding, essentially allowing traffic to flow in and out through your router through a specific port to the computer that you're running the server on. Keep in mind this varies from ISP to ISP and from router to router, so a good guide dependent on your router is here . By default you're going to want to port forward the port 25565 for both the TCP and UDP protocols. To check whether the port forward fully worked, we recommend heading over to this website while your minecraft server is open (preferably after a restart post port forwarding), plug in the port you'd like to check, and if it says open you're good! If not, there might be something you're going to have to redo along the process. Another reason a port forward might have failed is the windows firewall. To configure this, navigate to the windows defender control panel screen, and head over into advanced settings (you will need admin to do this). Go into inbound rules and outbound rules, and create a new rule for each, name it whatever you like, and make sure that it is allowing the port 25565 on BOTH TCP and UDP (you might need to set up 2 rules for each side). Once that is done, windows should no longer block a server running on that port on your machine. Note: some ISPs have built in security funcitons in the router itself (looking at you xFinity), and as such they may block people from connecting to the server. While we do not recommend turning off a security function for the everyday user, in some instances it is required. This process is slightly different for a modded server so we will go over it here!","title":"Setup For Windows"}]}